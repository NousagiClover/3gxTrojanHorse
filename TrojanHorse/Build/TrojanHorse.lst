00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
0000000c 00000001 b __tls_guard
00000010 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000020 00000001 B CTRPluginFramework::PrivColor::_useClamp
00000024 00000008 B CTRPluginFramework::Renderer::_rendererContext
07000100 A __start__
07000100 T _start
07000104 T __service_ptr
07000108 t startup
07000128 t ClearMem
0700013c t ClrLoop
07000154 T _init
0700016c T initLib
0700018c T __ctru_exit
07000198 t .udivsi3_skip_div0_test
07000198 T __aeabi_uidiv
07000198 000001ec T __udivsi3
07000384 00000020 T __aeabi_uidivmod
070003a4 T __aeabi_idiv
070003a4 00000220 T __divsi3
070003ac t .divsi3_skip_div0_test
070005c4 00000020 T __aeabi_idivmod
070005e4 00000004 W __aeabi_idiv0
070005e4 00000004 W __aeabi_ldiv0
070005e8 0000019c T __aeabi_frsub
070005f0 00000194 T __aeabi_fsub
070005f0 00000194 T __subsf3
070005f4 00000190 T __addsf3
070005f4 00000190 T __aeabi_fadd
07000784 00000028 T __aeabi_ui2f
07000784 00000028 T __floatunsisf
0700078c 00000020 T __aeabi_i2f
0700078c 00000020 T __floatsisf
070007ac 0000008c T __aeabi_ul2f
070007ac 0000008c T __floatundisf
070007bc 0000007c T __aeabi_l2f
070007bc 0000007c T __floatdisf
07000838 T __aeabi_ldivmod
0700090c 00000014 T __restore_core_regs
0700090c 00000014 T restore_core_regs
07000920 T __gnu_Unwind_Restore_VFP
07000928 T __gnu_Unwind_Save_VFP
07000930 T __gnu_Unwind_Restore_VFP_D
07000938 T __gnu_Unwind_Save_VFP_D
07000940 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000948 T __gnu_Unwind_Save_VFP_D_16_to_31
07000950 T __gnu_Unwind_Restore_WMMXD
07000994 T __gnu_Unwind_Save_WMMXD
070009d8 T __gnu_Unwind_Restore_WMMXC
070009ec T __gnu_Unwind_Save_WMMXC
07000a00 00000024 T ___Unwind_RaiseException
07000a00 00000024 T _Unwind_RaiseException
07000a24 00000024 T ___Unwind_Resume
07000a24 00000024 T _Unwind_Resume
07000a48 00000024 T ___Unwind_Resume_or_Rethrow
07000a48 00000024 T _Unwind_Resume_or_Rethrow
07000a6c 00000024 T ___Unwind_ForcedUnwind
07000a6c 00000024 T _Unwind_ForcedUnwind
07000a90 00000024 T ___Unwind_Backtrace
07000a90 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t __do_global_dtors_aux
0700128c t frame_dummy
070012b8 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
070012e8 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0700136c 00000080 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<char const* const*>(char const* const*, char const* const*, std::forward_iterator_tag) [clone .isra.0]
070013ec 0000013c t CTRPluginFramework::message(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::MenuEntry*)#1}::_FUN(CTRPluginFramework::MenuEntry*)
07001528 00000044 T CTRPluginFramework::hp(CTRPluginFramework::MenuEntry*)
0700156c 00000064 T CTRPluginFramework::moonjump(CTRPluginFramework::MenuEntry*)
070015d0 00000040 T CTRPluginFramework::speedHack(CTRPluginFramework::MenuEntry*)
07001610 00000048 T CTRPluginFramework::item(CTRPluginFramework::MenuEntry*)
07001658 00000044 T CTRPluginFramework::endurance(CTRPluginFramework::MenuEntry*)
0700169c 00000044 T CTRPluginFramework::craft(CTRPluginFramework::MenuEntry*)
070016e0 00000044 T CTRPluginFramework::autoChat(CTRPluginFramework::MenuEntry*)
07001724 00000004 T CTRPluginFramework::customKeyboard(CTRPluginFramework::MenuEntry*)
07001728 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001728 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001764 000000fc T CTRPluginFramework::cheatSelecter(CTRPluginFramework::MenuEntry*)
07001860 00000148 T CTRPluginFramework::message(CTRPluginFramework::MenuEntry*)
070019a8 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework13cheatSelecterEPNS_9MenuEntryE
070019c8 0000000c t _GLOBAL__sub_D__ZN18CTRPluginFramework13cheatSelecterEPNS_9MenuEntryE
070019d4 00000018 t __tcf_0
070019ec 00000064 t void std::vector<unsigned char, std::allocator<unsigned char> >::_M_range_initialize<unsigned char const*>(unsigned char const*, unsigned char const*, std::forward_iterator_tag) [clone .isra.0]
07001a50 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07001ad4 000004c0 T CTRPluginFramework::InitMenu(CTRPluginFramework::PluginMenu&)
07001f94 000000e4 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
07002078 000001e0 t CTRPluginFramework::ToggleTouchscreenForceOn()
07002258 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
0700225c 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0700225c 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0700227c 000003d8 T CTRPluginFramework::main()
07002654 T svcCustomBackdoor
0700265c T svcConvertVAToPA
07002664 T svcFlushDataCacheRange
0700266c T svcInvalidateEntireInstructionCache
07002674 T svcMapProcessMemoryEx
07002688 T svcUnmapProcessMemoryEx
07002690 T svcControlProcess
07002698 0000023c t CTRPluginFramework::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned long, CTRPluginFramework::Screenshot::ImageBuffer*)
070028d4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700292c 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const
07002940 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
07002968 0000001c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const
07002984 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
070029ac 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_move(char*, char const*, unsigned int)
070029d4 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
07002a80 000000f8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
07002b78 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07002c08 00000280 T CTRPluginFramework::Screenshot::UpdateFileCount()
07002e88 00000048 T CTRPluginFramework::Screenshot::Initialize()
07002ed0 00000374 T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
07003244 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
070032d4 00000300 T CTRPluginFramework::Screenshot::TaskCallback(void*)
070035d4 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07003610 000000d4 t _GLOBAL__sub_D__ZN18CTRPluginFramework10Screenshot9IsEnabledE
070036e4 000000ac T CTRPluginFramework::SystemImpl::Initialize()
07003790 00000050 T CTRPluginFramework::SystemImpl::CheckCitra()
070037e0 00000018 T CTRPluginFramework::SystemImpl::WantsToSleep()
070037f8 0000001c T CTRPluginFramework::SystemImpl::IsSleeping()
07003814 0000003c T CTRPluginFramework::SystemImpl::ReadyToSleep()
07003850 00000020 T CTRPluginFramework::SystemImpl::WakeUpFromSleep()
07003870 00000044 T CTRPluginFramework::SystemImpl::Status()
070038b4 00000024 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormat)
070038d8 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
070038d8 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07003948 00000100 T CTRPluginFramework::ScreenImpl::Initialize()
07003a48 00000050 T CTRPluginFramework::ScreenImpl::ApplyCtrpfScreens()
07003a98 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float)
07003b78 0000005c T CTRPluginFramework::ScreenImpl::ImportFromGsp()
07003bd4 00000028 T CTRPluginFramework::ScreenImpl::Release()
07003bfc 00000070 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
07003c6c 00000040 T CTRPluginFramework::ScreenImpl::Flush()
07003cac 00000098 T CTRPluginFramework::ScreenImpl::Clear(bool)
07003d44 00000044 T CTRPluginFramework::ScreenImpl::Copy()
07003d88 000000cc T CTRPluginFramework::ScreenImpl::Acquire(bool)
07003e54 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
07003e5c 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
07003eb8 00000050 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
07003f08 0000003c T CTRPluginFramework::ScreenImpl::Clean()
07003f44 0000008c T CTRPluginFramework::ScreenImpl::SwitchFrameBuffers(bool)
07003fd0 00000070 T CTRPluginFramework::ScreenImpl::AcquireFromGsp(bool)
07004040 00000030 T CTRPluginFramework::ScreenImpl::CheckGspFrameBuffersInfo()
07004070 00000060 T CTRPluginFramework::ScreenImpl::SwapBuffer()
070040d0 00000014 T CTRPluginFramework::ScreenImpl::SwapBufferInternal()
070040e4 0000001c T CTRPluginFramework::ScreenImpl::GetBacklight()
07004100 0000001c T CTRPluginFramework::ScreenImpl::SetBacklight(unsigned long)
0700411c 00000008 T CTRPluginFramework::ScreenImpl::GetFormat() const
07004124 00000008 T CTRPluginFramework::ScreenImpl::GetStride() const
0700412c 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel() const
07004134 0000001c T CTRPluginFramework::ScreenImpl::GetFrameBufferInfos(int&, int&, GSPGPU_FramebufferFormat&) const
07004150 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(bool)
0700416c 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(int, int)
070041c0 0000002c T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(bool)
070041ec 00000058 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(int, int)
07004244 0000005c T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
070042a0 00000044 T CTRPluginFramework::Search::UpdateProgress()
070042e4 00000048 T CTRPluginFramework::Search::Cancel()
0700432c 00000184 T CTRPluginFramework::Search::CheckNextRegion()
070044b0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07004508 0000015c W std::__cxx11::to_string(unsigned long)
07004664 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070046e4 00000008 T CTRPluginFramework::Search::GetHeader() const
070046ec 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
07004734 0000000c T CTRPluginFramework::Search::GetType() const
07004740 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
07004758 00000070 T CTRPluginFramework::Search::WriteHeader()
070047c8 00000058 T CTRPluginFramework::Search::WriteResults()
07004820 00000048 T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
07004868 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07004868 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070048c8 000000ec W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
070049b4 00000084 T CTRPluginFramework::Search::CreateIndexTable()
07004a38 0000013c T CTRPluginFramework::Search::ExecuteSearch()
07004b74 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
07004bec 00000034 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
07004c20 000001f0 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004c20 000001f0 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004e10 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int)
07004e5c 00000250 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07004e5c 00000250 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
070050ac 0000022c T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
070052d8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07005330 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07005330 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0700537c 000000b0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
0700542c 000000bc W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
0700542c 000000bc W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
070054e8 00000098 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
07005580 000000f0 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
07005670 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070056f0 00000360 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
07005a50 0000013c T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
07005b8c 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
07005bb4 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
07005c10 000000b4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
07005cc4 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
07005cf4 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
07005d44 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
07005d9c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07005e08 00000280 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
07006088 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
070063b4 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
070063bc 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
070063d0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07006428 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
07006428 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
07006458 00000020 W CTRPluginFramework::MenuItem::~MenuItem()
07006478 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07006478 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
070064a0 00000020 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
070064c0 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
070064c8 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
070064dc 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
070064e8 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
070064f0 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
07006514 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
07006544 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
07006560 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
070065c8 00000080 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006648 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07006648 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07006734 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07006734 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07006824 00000204 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
07006a28 00000024 t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .part.0] [clone .isra.0]
07006a4c 00000064 t std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
07006ab0 00000064 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
07006b14 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07006b14 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07006b50 00000138 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
07006c88 0000017c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
07006e04 00000058 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
07006e5c 00000194 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
07006ff0 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
07007008 000000e8 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
070070f0 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
070072b0 000000e8 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
07007398 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
07007558 000000e8 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
07007640 00000088 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
070076c8 00000170 t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
07007838 00000020 t __tcf_1
07007858 000001ec t CTRPluginFramework::Vector<int>& std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&) [clone .isra.0]
07007a44 000001a4 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
07007be8 00000114 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
07007cfc 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
07007d90 000000a4 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
07007e34 000002b8 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070080ec 00000050 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
0700813c 00000104 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
07008240 0000003c t CTRPluginFramework::Line<int>& std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&) [clone .isra.0]
07008280 0000069c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
0700891c 00000198 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07008ab4 00000084 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
07008b38 00000180 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
07008cb8 000001f4 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07008eac 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
07008f4c 000001ec T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
07009138 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
07009168 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07009168 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07009224 00000028 T CTRPluginFramework::Window::~Window()
07009224 00000028 T CTRPluginFramework::Window::~Window()
0700924c 00000064 T CTRPluginFramework::Window::Draw() const
070092b0 000000dc T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700938c 00000018 T CTRPluginFramework::Window::DrawButton() const
070093a4 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
070093bc 00000018 T CTRPluginFramework::Window::MustClose() const
070093d4 00000028 T CTRPluginFramework::Window::Close() const
070093fc 00000004 T CTRPluginFramework::Window::GetRect() const
07009400 00000034 T CTRPluginFramework::Window::UpdateBackgrounds()
07009434 00000080 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
070094b4 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Window12BottomWindowE
070094d4 00000020 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
070094f4 00000020 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
07009514 0000002c T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
07009540 00000034 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
07009574 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0700959c 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
070095c4 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
070095e4 00000030 T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
07009614 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0700965c 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
070096a0 00000144 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormat)
070097e4 0000002c T CTRPluginFramework::PrivColor::UseClamp(bool)
07009810 00000074 W CTRPluginFramework::Rect<int>::Contains(int, int) const
07009884 00000040 t __tls_init
07009884 00000040 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
070098c4 0000004c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
07009910 0000009c T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
070099ac 00000094 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
07009a40 000000b0 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
07009af0 000000bc T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
07009bac 000000b8 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
07009c64 00000028 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
07009c8c 00000038 W CTRPluginFramework::File::~File()
07009c8c 00000038 W CTRPluginFramework::File::~File()
07009cc4 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
07009ce8 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
07009d0c 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07009d0c 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07009d44 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
07009d4c 00000008 T CTRPluginFramework::BMPImage::Width() const
07009d54 00000008 T CTRPluginFramework::BMPImage::Height() const
07009d5c 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
07009d64 00000010 T CTRPluginFramework::BMPImage::data() const
07009d74 0000001c T CTRPluginFramework::BMPImage::end() const
07009d90 00000014 W CTRPluginFramework::BMPImage::DataClear()
07009da4 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07009da4 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07009e30 00000034 T CTRPluginFramework::BMPImage::Unload()
07009e64 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
07009eac 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
07009edc 000000d0 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
07009fac 0000006c T CTRPluginFramework::BMPImage::_CreateBitmap()
0700a018 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
0700a03c 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
0700a158 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
0700a158 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
0700a1ac 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
0700a1ac 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
0700a21c 000001dc T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700a3f8 0000012c T CTRPluginFramework::BMPImage::OptimiseForRendering()
0700a524 000000d4 T CTRPluginFramework::BMPImage::Draw(int, int)
0700a5f8 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
0700a600 000000fc T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
0700a6fc 00000318 T CTRPluginFramework::BMPImage::_LoadBitmap()
0700aa14 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700aa14 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700aac4 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0700ab10 000002c8 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
0700add8 000000c4 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
0700ae9c 0000014c T CTRPluginFramework::Renderer::EndFrame(bool)
0700afe8 0000015c T CTRPluginFramework::Button::Draw()
0700b144 00000070 T CTRPluginFramework::Button::operator()()
0700b1b4 00000184 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
0700b338 00000038 T CTRPluginFramework::Button::~Button()
0700b338 00000038 T CTRPluginFramework::Button::~Button()
0700b370 00000020 T CTRPluginFramework::Button::~Button()
0700b390 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0700b390 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0700b524 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0700b524 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0700b544 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0700b544 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0700b5dc 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0700b5dc 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0700b5f0 00000018 T CTRPluginFramework::Button::Enable(bool)
0700b608 00000010 T CTRPluginFramework::Button::Enable()
0700b618 00000010 T CTRPluginFramework::Button::Disable()
0700b628 00000010 T CTRPluginFramework::Button::Lock()
0700b638 00000010 T CTRPluginFramework::Button::Execute()
0700b648 00000018 T CTRPluginFramework::Button::SetState(bool)
0700b660 00000010 T CTRPluginFramework::Button::GetState() const
0700b670 00000008 T CTRPluginFramework::Button::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
0700b678 00000094 T CTRPluginFramework::OSDImpl::DrawNotif_TaskFunc(void*)
0700b70c 00000064 t CTRPluginFramework::GetBuffer(unsigned long)
0700b770 000000ac t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.0]
0700b81c 00000030 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long) [clone .constprop.0]
0700b84c 00000010 t void std::__advance<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, int>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >&, int, std::random_access_iterator_tag) [clone .isra.0]
0700b85c 0000016c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)::{lambda(bool (*)(CTRPluginFramework::Screen const&))#1}>::operator()<__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > > >(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >) [clone .isra.0]
0700b9c8 00000058 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::Update()::{lambda(CTRPluginFramework::OSDImpl::OSDMessage*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >) [clone .isra.0]
0700ba20 00000130 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700ba20 00000130 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700bb50 000000e0 T CTRPluginFramework::OSDImpl::UpdateScreens()
0700bc30 000000d0 T CTRPluginFramework::InstallOSD()
0700bd00 000000ac T CTRPluginFramework::OSDImpl::_Initialize()
0700bdac 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
0700bdac 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
0700bdd4 000000b4 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0700be88 000001a4 T CTRPluginFramework::OSDImpl::Update()
0700c02c 00000058 T CTRPluginFramework::OSDImpl::OnTopScreenFrame()
0700c084 000000c8 T CTRPluginFramework::OSDImpl::OnBottomScreenFrame()
0700c14c 000005e0 T CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)
0700c72c 0000008c T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
0700c7b8 00000094 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
0700c84c 00000070 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0700c8bc 0000012c T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0700c9e8 0000011c T CTRPluginFramework::Renderer::GetTextSize(char const*)
0700cb04 000001a4 T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0700cca8 000001c8 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
0700ce70 00000064 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
0700ced4 00000238 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color, unsigned long)
0700d10c 000005a8 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int, unsigned long)
0700d6b4 00000484 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*, unsigned long)
0700db38 00000074 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0700dbac 00000070 T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0700dc1c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700dc74 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
0700dca0 00000108 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0700dda8 000000f4 T CTRPluginFramework::Preferences::LoadBackgrounds()
0700de9c 00000060 T CTRPluginFramework::Preferences::ApplyBacklight()
0700defc 00000004 T CTRPluginFramework::Preferences::Initialize()
0700df00 00000214 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV11&)
0700e114 000000bc T CTRPluginFramework::Preferences::LoadSettings()
0700e1d0 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0700e22c 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0700e2e8 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
0700e3a4 00000158 T CTRPluginFramework::Preferences::WriteSettings()
0700e4fc 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0700e58c 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700e634 0000020c t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
0700e840 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0700e8e8 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0700e914 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700e96c 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0700e9ac 000000bc T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700ea68 00000054 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700eabc 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
0700eaf4 0000005c T CTRPluginFramework::InitializeRandomEngine()
0700eb50 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0700ebd0 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700ec2c 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0700ec70 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0700eccc 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0700ed4c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700ed5c 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700edb8 00000050 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
0700ee08 000000dc T CTRPluginFramework::Utils::ConvertUTF16ToUTF8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned short const*)
0700eee4 0000029c t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700f180 00000104 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0700f284 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0700f2b8 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700f3f4 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700f3f4 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700f444 00000024 W std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> >::_M_dispose()
0700f468 00000700 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700fb68 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700fb70 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700fbb4 000000c8 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
0700fc7c 00000054 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
0700fcd0 00000080 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
0700fd50 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
0700fd6c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700fdc4 0000001c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
0700fde0 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0700fe40 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
0700fe9c 00000024 T CTRPluginFramework::ResetColor[abi:cxx11]()
0700fec0 00000014 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700fed4 00000014 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700fee8 00000104 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0700ffec 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07010044 00000078 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.0]
070100bc 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
07010100 00000048 T CTRPluginFramework::Directory::Close() const
07010148 00000008 T CTRPluginFramework::Directory::IsOpen() const
07010150 00000040 T CTRPluginFramework::Directory::Directory()
07010150 00000040 T CTRPluginFramework::Directory::Directory()
07010190 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07010190 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
070101b8 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
070101ec 0000007c T CTRPluginFramework::Directory::~Directory()
070101ec 0000007c T CTRPluginFramework::Directory::~Directory()
07010268 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
070102c8 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
070102c8 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
07010314 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07010314 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07010380 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
07010394 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701042c 000000a4 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070104d0 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070105a4 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07010638 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070106e4 0000000c t CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&) [clone .isra.0]
070106f0 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
07010780 00000118 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07010898 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070108d4 000000dc T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070109b0 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07010afc 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07010afc 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07010b54 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07010b54 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07010b70 0000011c t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07010c8c 00000084 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&)
07010d10 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07010d78 000000b4 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07010e2c 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07010e70 000001ec t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0701105c 00000288 T CTRPluginFramework::Directory::_List() const
070112e4 000000d4 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070113b8 000000dc T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07011494 0000000c T CTRPluginFramework::FwkSettings::Get()
070114a0 000000cc T CTRPluginFramework::FwkSettings::SetThemeDefault()
0701156c 000000dc t CTRPluginFramework::ConvertString(void*, unsigned char const*, unsigned long, CTRPluginFramework::StringFormat)
07011648 00000010 T CTRPluginFramework::Process::GetHandle()
07011658 00000010 T CTRPluginFramework::Process::GetTitleID()
07011668 00000024 T CTRPluginFramework::Process::GetTextSize()
0701168c 00000008 T CTRPluginFramework::Process::Pause()
07011694 00000010 T CTRPluginFramework::Process::Play(unsigned long)
070116a4 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
0701174c 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
07011750 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
0701179c 0000001c T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
070117b8 0000001c T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
070117d4 00000020 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
070117f4 00000020 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
07011814 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
07011834 0000007c T CTRPluginFramework::Process::WriteString(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::StringFormat)
070118b0 00000024 T CTRPluginFramework::Process::ReturnToHomeMenu()
070118d4 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
0701198c 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070119e8 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07011a20 0000000c T CTRPluginFramework::HookContext::GetCurrent()
07011a2c 00000028 T CTRPluginFramework::HookContext::GetCallCode()
07011a54 00000048 T CTRPluginFramework::Hook::Hook()
07011a54 00000048 T CTRPluginFramework::Hook::Hook()
07011a9c 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07011a9c 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07011ac4 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07011ac4 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07011ad8 00000064 T CTRPluginFramework::Hook::operator=(CTRPluginFramework::Hook&&)
07011b3c 00000050 T CTRPluginFramework::Hook::~Hook()
07011b3c 00000050 T CTRPluginFramework::Hook::~Hook()
07011b8c 0000001c T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long)
07011ba8 00000028 T CTRPluginFramework::Hook::InitializeForMitm(unsigned long, unsigned long)
07011bd0 00000010 T CTRPluginFramework::Hook::SetFlags(unsigned long)
07011be0 0000001c T CTRPluginFramework::Hook::IsEnabled()
07011bfc 00000120 T CTRPluginFramework::Hook::Enable()
07011d1c 00000030 T CTRPluginFramework::Hook::Disable()
07011d4c 00000008 T CTRPluginFramework::Hook::GetContext() const
07011d54 00000010 T CTRPluginFramework::System::IsNew3DS()
07011d64 00000010 T CTRPluginFramework::System::Reboot()
07011d74 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07011dcc 000000bc T CTRPluginFramework::File::Read(void*, unsigned long) const
07011e88 000000f4 T CTRPluginFramework::File::Write(void const*, unsigned long)
07011f7c 000000d8 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
07012054 00000008 T CTRPluginFramework::File::Tell() const
0701205c 0000002c T CTRPluginFramework::File::Rewind() const
07012088 00000030 T CTRPluginFramework::File::Flush() const
070120b8 00000064 T CTRPluginFramework::File::GetSize() const
0701211c 00000008 T CTRPluginFramework::File::IsOpen() const
07012124 00000044 T CTRPluginFramework::File::File()
07012124 00000044 T CTRPluginFramework::File::File()
07012168 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
070121e0 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
070121f4 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07012288 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701235c 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070123e0 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07012480 000000a8 T CTRPluginFramework::File::Close() const
07012528 0000017c T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
070126a4 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
070126a4 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07012700 0000009c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701279c 00000028 T CTRPluginFramework::Touch::IsDown()
070127c4 00000028 T CTRPluginFramework::Touch::GetPosition()
070127ec 00000018 T CTRPluginFramework::Clock::Clock()
070127ec 00000018 T CTRPluginFramework::Clock::Clock()
07012804 0000002c T CTRPluginFramework::Clock::GetElapsedTime() const
07012830 00000038 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
07012868 00000034 T CTRPluginFramework::Clock::Restart()
0701289c 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0701289c 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
070128a0 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
070128a4 00000030 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
070128d4 00000018 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
070128ec 00000008 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
070128f4 000000ac W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
070129a0 00000034 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>&&) [clone .isra.0]
070129d4 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
070129d4 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07012a80 00000048 T CTRPluginFramework::Task::Start() const
07012ac8 0000004c T CTRPluginFramework::Task::Start(void*) const
07012b14 00000064 T CTRPluginFramework::Task::Wait() const
07012b78 0000003c T CTRPluginFramework::Controller::Update()
07012bb4 00000004 T CTRPluginFramework::SoundEngine::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
07012bb8 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07012bb8 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07012c2c 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
07012c40 00000004 T CTRPluginFramework::PluginMenu::operator+=(CTRPluginFramework::MenuFolder const*) const
07012c44 00000048 T CTRPluginFramework::PluginMenu::Run() const
07012c8c 00000008 T CTRPluginFramework::PluginMenu::ShowWelcomeMessage(bool) const
07012c94 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
07012c9c 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
07012cac 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07012cb8 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
07012cb8 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
07012ce8 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
07012ce8 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
07012d00 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07012d00 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07012d40 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07012d40 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07012d68 00000020 T CTRPluginFramework::MenuFolder::operator+=(CTRPluginFramework::MenuEntry const*)
07012d88 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07012d88 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07012dd4 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07012dd4 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07012e24 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07012e24 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07012e54 00000008 T CTRPluginFramework::MenuEntry::WasJustActivated() const
07012e5c 00000008 T CTRPluginFramework::MenuEntry::IsActivated() const
07012e64 0000000c T CTRPluginFramework::MenuEntry::SetGameFunc(void (*)(CTRPluginFramework::MenuEntry*)) const
07012e70 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
07012e78 00000038 W CTRPluginFramework::TextBox::~TextBox()
07012e78 00000038 W CTRPluginFramework::TextBox::~TextBox()
07012eb0 00000020 W CTRPluginFramework::TextBox::~TextBox()
07012ed0 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07012ed0 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07012f18 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07012f18 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07012f54 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
07012f54 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
07012f94 00000008 T CTRPluginFramework::MessageBox::operator()() const
07012f9c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07012ff4 000000c0 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070130b4 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070130b4 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070130fc 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070130fc 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07013168 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
07013168 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
07013198 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
070131a0 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
070131bc 00000044 T CTRPluginFramework::Keyboard::Open() const
07013200 00000098 T CTRPluginFramework::Keyboard::Open(float&) const
07013298 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
070132a0 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
070132a8 00000008 T CTRPluginFramework::Keyboard::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)) const
070132b0 00000090 T CTRPluginFramework::Keyboard::Keyboard(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070132b0 00000090 T CTRPluginFramework::Keyboard::Keyboard(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07013340 000000d0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*) [clone .isra.0]
07013410 00000094 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
070134a4 00000090 T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07013534 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
070135f8 00000090 T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07013688 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
0701374c 00000090 T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070137dc 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
070138a0 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0701394c 000000d0 T CTRPluginFramework::Keyboard::Open(float&, float) const
07013a1c 00000104 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
07013b20 00000104 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
07013c24 00000104 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
07013d28 00000074 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
07013d9c 00000088 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07013e24 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07013e7c 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07013e84 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07013e84 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07013ea0 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07013ea0 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07013ee8 00000030 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07013f18 0000001c T CTRPluginFramework::HotkeyManager::Count()
07013f34 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07013fb4 00000088 T CTRPluginFramework::Hotkey::AskForKeys()
0701403c 00000138 T CTRPluginFramework::HotkeyManager::AskForKeys()
07014174 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
070141f0 000000fc T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
070142ec 000000c8 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
070143b4 00000148 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
070144fc 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6HotkeyC2Ev
07014530 000000e8 W void std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::_M_realloc_insert<CTRPluginFramework::OSDImpl::OSDMessage*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, CTRPluginFramework::OSDImpl::OSDMessage*&&)
07014618 00000088 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070146a0 00000070 t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, int const&, unsigned int) const [clone .isra.0]
07014710 0000005c t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(int const&) [clone .isra.0]
0701476c 000000c4 T CTRPluginFramework::Render::PullRandomCharacter[abi:cxx11](int)
07014830 0000001c W std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
0701484c 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
07014884 00000064 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
070148e8 00000110 T CTRPluginFramework::Color::Fade(float)
070149f8 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
07014a38 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
07014ab4 00000220 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
07014cd4 000000c8 T OnSharedMemMap(unsigned long, void*, MemPerm, MemPerm)
07014d9c 00000008 t CTRPluginFramework::KeepThreadMain(void*)::{lambda(void const*)#1}::_FUN(void const*)
07014da4 00000064 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
07014e08 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07014e60 00000018 W CTRPluginFramework::ProcessImpl::UserProcessEventCallback(CTRPluginFramework::Process::Event)
07014e78 00000028 T OnLoadCro
07014ea0 000000ac T CTRPluginFramework::ThreadExit()
07014f4c 00000054 T abort
07014fa0 000000c8 T __entrypoint
07015068 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07015068 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07015090 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07015110 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
07015184 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
070151b8 000006f0 T CTRPluginFramework::KeepThreadMain(void*)
070158a8 000000b0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07015958 0000020c T CTRPluginFramework::Initialize()
07015b64 00000044 T CTRPluginFramework::ThreadInit(void*)
07015ba8 00000048 t _GLOBAL__sub_I_g_gspEventThreadPriority
07015bf0 0000002c t _GLOBAL__sub_D_g_gspEventThreadPriority
07015c20 000000b8 t NCSNDCmd_Add
07015cd8 00000084 t NCSNDCmd_Execute.constprop.0
07015d5c 00000068 T ncsndNotifyAptEvent
07015dc4 00000004 t ncsndAptHook
07015dc8 000001c8 T ncsndInit
07015f90 000000ac T ncsndExit
0701603c 00000024 T ncsndInitializeSound
07016060 00000264 T ncsndPlaySound
070162c4 00000040 T ncsndStopSound
07016304 00000090 T ncsndIsPlaying
07016394 T LoadCROHooked
070163a8 T AR__ExecuteRoutine
070163d0 t stackBak
070163d8 00000020 T __libctru_exit
070163f8 0000001c T __appExit
07016414 0000003c T __syscall_getreent
07016450 0000000c T __aeabi_read_tp
0701645c 0000003c T __getThreadLocalStorage
07016498 00000070 T __syscall_gettod_r
07016508 00000004 T __syscall_lock_acquire
0701650c 00000004 T __syscall_lock_release
07016510 00000004 T __syscall_lock_acquire_recursive
07016514 00000004 T __syscall_lock_release_recursive
07016518 00000054 T initThreadVars
0701656c 0000005c T __system_initSyscalls
070165c8 00000190 T __createThread
07016758 00000110 T __startThread
07016868 00000024 T threadGetHandle
0701688c 0000002c T threadFree
070168b8 00000024 T threadJoin
070168dc 00000020 T threadGetCurrent
070168fc 0000003c T threadExit
07016938 00000020 t _thread_begin
07016958 0000003c T fontEnsureMappedExtension
07016994 0000004c T hidInitFake
070169e0 0000003c T hidExitFake
07016a1c 0000002c T hidSetSharedMem
07016a48 00000070 T plgLdrExit
07016ab8 000000d4 T plgLdrInit
07016b8c 00000050 T PLGLDR__GetPluginPath
07016bdc 00000024 T PLGLDR__FetchEvent
07016c00 000000e8 T PLGLDR__Reply
07016ce8 000000b0 T __system_allocateHeaps
07016d98 0000002c t CTRPluginFrameworkImpl::Services::GSP::GSPGPU__RegisterInterruptHook()
07016dc4 00000028 t CTRPluginFrameworkImpl::Services::GSP::ClearInterrupts()
07016dec 00000154 t CTRPluginFrameworkImpl::Services::GSP::InterruptReceiver(void*)
07016f40 00000080 t CTRPluginFrameworkImpl::Services::GSP::EnqueueEvent(signed char, bool)
07016fc0 00000028 t CTRPluginFrameworkImpl::Services::GSP::plgVAtoGameVa(unsigned long*)
07016fe8 00000028 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
07017010 00000064 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
07017074 000000d0 T CTRPluginFrameworkImpl::Services::GSP::Update(unsigned long, unsigned long, unsigned long)
07017144 00000004 T __gsp__Update
07017148 00000288 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&)
070173d0 00000018 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared::FillFrameBuffersFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&)
070173e8 00000020 T CTRPluginFrameworkImpl::Services::GSP::TriggerPSCEvents()
07017408 00000048 T CTRPluginFrameworkImpl::Services::GSP::PauseInterruptReceiver()
07017450 00000034 T CTRPluginFrameworkImpl::Services::GSP::ResumeInterruptReceiver()
07017484 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank()
070174a8 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank1()
070174cc 0000003c T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlankBoth()
07017508 0000002c T CTRPluginFrameworkImpl::Services::GSP::SwapBuffer(int)
07017534 00000090 T CTRPluginFrameworkImpl::Services::GSP::WaitBufferSwapped(int)
070175c4 00000034 T CTRPluginFrameworkImpl::Services::GSP::ImportFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int)
070175f8 000000a8 T CTRPluginFrameworkImpl::Services::GSP::SetFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int, bool)
070176a0 0000017c T CTRPluginFrameworkImpl::Services::GSP::Initialize()
0701781c 0000003c t _GLOBAL__sub_I__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
07017858 00000020 t _GLOBAL__sub_D__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
07017878 00000020 t SetHookContextInTLS(CTRPluginFramework::HookContext*)
07017898 00000014 t decltype (::new ((void*)(0)) CTRPluginFramework::AsmWrapper()) std::construct_at<CTRPluginFramework::AsmWrapper>(CTRPluginFramework::AsmWrapper*) [clone .isra.0]
070178ac 00000240 t GenerateAsm(CTRPluginFramework::AsmWrapper&, CTRPluginFramework::HookContext&)
07017aec 00000044 W CTRPluginFramework::Lock::~Lock()
07017aec 00000044 W CTRPluginFramework::Lock::~Lock()
07017b30 000000d4 T CTRPluginFramework::HookManager::HookManager()
07017b30 000000d4 T CTRPluginFramework::HookManager::HookManager()
07017c04 00000074 T CTRPluginFramework::HookManager::GetFreeHookWrapper(long&)
07017c78 00000064 T CTRPluginFramework::HookManager::GetAsmWrapper(CTRPluginFramework::HookContext*)
07017cdc 000000d0 T CTRPluginFramework::HookManager::DisableHook(CTRPluginFramework::HookContext&)
07017dac 0000000c T CTRPluginFramework::HookManager::Lock()
07017db8 0000000c T CTRPluginFramework::HookManager::Unlock()
07017dc4 00000068 T CTRPluginFramework::HookManager::PrepareToUnmapMemory()
07017e2c 00000078 T CTRPluginFramework::HookManager::RecoverFromUnmapMemory()
07017ea8 000000c8 T __hook__CheckTlsValue
07017f70 00000144 W void std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> >::_M_realloc_insert<>(__gnu_cxx::__normal_iterator<CTRPluginFramework::AsmWrapper*, std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> > >)
070180b4 00000084 T CTRPluginFramework::HookManager::GetFreeAsmWrapper()
07018138 0000015c T CTRPluginFramework::HookManager::ApplyHook(CTRPluginFramework::HookContext&)
07018294 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11HookManager10_singletonE
070182a0 00000044 t _GLOBAL__sub_D__ZN18CTRPluginFramework11HookManager10_singletonE
070182e4 00000010 t std::__atomic_base<unsigned long>::operator=(unsigned long) [clone .isra.0]
070182f4 00000060 T CTRPluginFramework::Scheduler::Core::Core()
070182f4 00000060 T CTRPluginFramework::Scheduler::Core::Core()
07018354 00000098 T CTRPluginFramework::Scheduler::Initialize()
070183ec 0000004c T CTRPluginFramework::Scheduler::Exit()
07018438 00000040 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>&&) [clone .isra.0]
07018478 00000044 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy()
070184bc 00000040 t std::__shared_count<(__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [clone .isra.0]
070184fc 000001a4 T CTRPluginFramework::Scheduler::_PollTask(CTRPluginFramework::Scheduler::Core&)
070186a0 00000104 T CTRPluginFramework::Scheduler__CoreHandler(void*)
070187a4 00000058 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
070187fc 00000140 W void std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > >::_M_realloc_insert<std::shared_ptr<CTRPluginFramework::TaskContext> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, std::shared_ptr<CTRPluginFramework::TaskContext> const&)
0701893c 00000174 T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
07018ab0 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
07018af4 00000088 t _GLOBAL__sub_D__ZN18CTRPluginFramework9Scheduler10_singletonE
07018b7c 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
07018ba0 00000004 t addrMapNodeDestructor(rbtree_node*)
07018ba4 00000144 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
07018ce8 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
07018cf0 0000006c T CTRPluginFramework::Heap::Free(void*)
07018d5c 0000000c T CTRPluginFramework::Heap::SpaceFree()
07018d68 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07018d74 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07018d94 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07018dec 000002b4 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070190a0 0000003c W unsigned short* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned short, unsigned short>(unsigned short*, unsigned short*, unsigned short*)
070190dc 000001d4 W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
070192b0 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
070192b0 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07019374 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
07019380 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6FSPath7FSMutexE
070193b4 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
070193c0 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
070193d8 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07019418 00000044 t KProcess::PatchMaxThreads()::{lambda(KProcess*, unsigned long)#1}::_FUN(KProcess*, unsigned long)
0701945c 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
0701946c 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
07019480 00000004 T Kernel::Initialize()
07019484 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
0701949c 0000000c T KProcess::GetCurrent()
070194a8 00000024 T KProcess::PatchCore2Access()
070194cc 0000002c T KProcess::PatchCategory(unsigned long)
070194f8 00000014 T KProcess__PatchCategory
0701950c 0000002c T KProcess::PatchMaxPriority(unsigned long)
07019538 00000014 T KProcess__PatchMaxPriority
0701954c 00000028 T KProcess::PatchMaxThreads()
07019574 0000004c t CTRPluginFramework::ThreadPredicate(KThread*)
070195c0 00000094 T CTRPluginFramework::ProcessImpl::Play(bool)
07019654 0000003c T CTRPluginFramework::ProcessImpl::LockGameThreads()
07019690 00000038 T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
070196c8 00000064 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
0701972c 00000070 T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
0701979c 00000094 T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
07019830 000000a8 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
070198d8 00000038 T CTRPluginFramework::ProcessImpl::EnableExceptionHandlers()
07019910 0000001c T CTRPluginFramework::ProcessImpl::DisableExceptionHandlers()
0701992c 00000038 T CTRPluginFramework::ProcessImpl::ReturnFromException(CpuRegisters*)
07019944 t _store_reg_loop
07019964 0000000c T CTRPluginFramework::ProcessImpl::SignalExit()
07019970 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
07019970 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
07019998 000000ec W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
07019a84 0000003c W std::vector<MemInfo, std::allocator<MemInfo> >::push_back(MemInfo const&)
07019ac0 000000bc T CTRPluginFramework::ProcessImpl::UpdateMemRegions(bool)
07019b7c 00000424 T CTRPluginFramework::ProcessImpl::Initialize()
07019fa0 0000006c T CTRPluginFramework::ProcessImpl::Pause(bool)
0701a00c 000000e0 T CTRPluginFramework::ProcessImpl::ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
0701a0ec 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0701a0f8 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0701a12c 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
0701a12c 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
0701a1cc 00000050 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::pop_front()
0701a21c 00000038 T CTRPluginFramework::EventManager::Clear()
0701a254 000001e8 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0701a440 00000068 T CTRPluginFramework::EventManager::PushEvent(CTRPluginFramework::Event const&)
0701a4a8 000002f0 T CTRPluginFramework::EventManager::ProcessEvents()
0701a798 000000cc T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0701a864 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0701a86c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701a8c4 00000008 T CTRPluginFramework::SoundEngineImpl::Initializelibcwav()
0701a8cc 00000004 T CTRPluginFramework::SoundEngineImpl::NotifyAptEvent(APT_HookType)
0701a8d0 00000004 T CTRPluginFramework::SoundEngineImpl::SetVaToPaConvFunction(unsigned long (*)(void const*))
0701a8d4 00000048 T CTRPluginFramework::SoundEngineImpl::RegisterMenuSoundEvent(CTRPluginFramework::SoundEngine::Event, CTRPluginFramework::Sound&)
0701a91c 00000024 T CTRPluginFramework::SoundEngineImpl::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
0701a940 00000044 T CTRPluginFramework::SoundEngineImpl::ClearMenuSounds()
0701a984 00000128 W std::vector<CTRPluginFramework::Sound, std::allocator<CTRPluginFramework::Sound> >::_M_default_append(unsigned int)
0701aaac 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0701ab3c 00000200 T CTRPluginFramework::SoundEngineImpl::InitializeMenuSounds()
0701ad3c 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0701ad48 00000050 t _GLOBAL__sub_D__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0701ad98 0000002c t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .isra.0]
0701adc4 00000028 W CTRPluginFramework::Mutex::~Mutex()
0701adc4 00000028 W CTRPluginFramework::Mutex::~Mutex()
0701adec 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0701adec 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0701aef4 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
0701aefc 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
0701af1c 00000190 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0701b0ac 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0701b0cc 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
0701b0e8 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
0701b104 00000010 T CTRPluginFramework::PluginMenuImpl::GetRunningInstance()
0701b114 00000008 T CTRPluginFramework::PluginMenuImpl::GetHexEditorState() const
0701b11c 00000008 T CTRPluginFramework::PluginMenuImpl::ShowWelcomeMessage(bool)
0701b124 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
0701b12c 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
0701b134 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
0701b134 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
0701b15c 00000028 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
0701b15c 00000028 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
0701b184 00000138 W __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > std::find<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (*)()>(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())
0701b2bc 0000003c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuImpl::Run()::{lambda(void (*)())#1}>::operator()<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > >(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >) [clone .isra.0]
0701b2f8 00000100 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
0701b3f8 00000750 T CTRPluginFramework::PluginMenuImpl::Run()
0701bb48 00000050 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
0701bb98 000000a0 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
0701bc38 00000104 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0701bd3c 00000074 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0701bd3c 00000074 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0701bdb0 00000198 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
0701bf48 00000120 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
0701c068 000001a4 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0701c20c 00000048 W unsigned long* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned long*, unsigned int>(unsigned long*, unsigned int)
0701c254 000000b0 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
0701c304 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
0701c340 00000134 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0701c474 00000140 T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0701c5b4 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
0701c5c0 00000014 t _GLOBAL__sub_D__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
0701c5d4 000001a4 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0701c5d4 000001a4 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0701c778 000001c4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0701c778 000001c4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0701c93c 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
0701c978 00000058 T CTRPluginFramework::Menu::CloseAll()
0701c9d0 00000030 T CTRPluginFramework::Menu::~Menu()
0701c9d0 00000030 T CTRPluginFramework::Menu::~Menu()
0701ca00 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0701ca0c 00000008 T CTRPluginFramework::Menu::GetFolder() const
0701ca14 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0701ca1c 00000044 T CTRPluginFramework::Menu::GetSelectedItem()
0701ca60 000003b4 T CTRPluginFramework::Menu::Draw() const
0701ce18 00000098 T CTRPluginFramework::Menu::_ScrollUp(int)
0701ceb0 00000098 T CTRPluginFramework::Menu::_ScrollDown(int)
0701cf48 00000244 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
0701d190 0000016c T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
0701d2fc 00000068 T CTRPluginFramework::Menu::ShowNote()
0701d364 00000008 T CTRPluginFramework::Menu::CloseNote()
0701d36c 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
0701d374 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0701d374 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0701d458 0000012c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701d458 0000012c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0701d584 00000054 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
0701d5d8 00000044 T CTRPluginFramework::Menu::Pop()
0701d61c 000000e8 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
0701d704 000000b4 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0701d7b8 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701d7b8 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701d89c 00000020 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701d8bc 00000010 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
0701d8cc 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
0701d91c 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](unsigned long)
0701d934 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
0701d958 000000b0 T CTRPluginFramework::MenuFolderImpl::Clear()
0701da08 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
0701da18 00000020 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
0701da38 00000058 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
0701da90 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701da90 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701db64 000000d8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701db64 000000d8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701dc3c 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
0701dc4c 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
0701dc5c 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
0701dc6c 00000030 t CTRPluginFramework::GetIndex(int)
0701dc9c 00000134 T CTRPluginFramework::HotkeysModifier::_DrawBottom()
0701ddd0 00000074 T CTRPluginFramework::HotkeysModifier::_Update()
0701de44 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0701de44 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0701deb0 00000094 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
0701df44 000001cc T CTRPluginFramework::HotkeysModifier::operator()()
0701e110 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
0701e13c 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0701e13c 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0701e174 00000110 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button const&)
0701e284 0000003c W std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::push_back(CTRPluginFramework::Button const&)
0701e2c0 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701e2c0 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701e41c 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
0701e474 000000c0 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
0701e534 000000ec t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
0701e620 000000bc t __tcf_1
0701e6dc 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701e734 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
0701e740 00000328 T CTRPluginFramework::PluginMenuHome::_RenderTop()
0701ea68 00000134 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
0701eba0 00000498 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
0701f038 00000118 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
0701f150 00000090 T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
0701f1e0 00000038 T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
0701f218 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
0701f244 000000ec T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
0701f330 00000084 T CTRPluginFramework::PluginMenuHome::_StarItem()
0701f3b4 00000080 T CTRPluginFramework::PluginMenuHome::Init()
0701f434 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
0701f490 000000c0 T CTRPluginFramework::PluginMenuHome::UpdateNote()
0701f550 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0701f550 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0701f9fc 00000130 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
0701fb2c 00000050 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0701fb7c 00000088 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
0701fc08 000003ac T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
0701ffb4 00000224 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
070201d8 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
070201ec 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
07020200 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
07020214 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
07020218 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0702021c 00000028 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
07020244 000000bc t __tcf_1
07020300 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
07020340 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07020398 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
070203d8 00000024 W CTRPluginFramework::Preferences::Toggle(unsigned long long)
070203fc 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
07020410 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
07020424 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
07020438 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
0702044c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
07020460 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
07020474 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
07020488 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
0702049c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
070204b0 00000150 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
07020600 0000014c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0702074c 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0702078c 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0702080c 00000180 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.0]
0702098c 000000c0 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07020a4c 00000064 t CTRPluginFramework::MenuHotkeyModifier()
07020ab0 00000b2c T CTRPluginFramework::PluginMenuTools::InitMenu()
070215dc 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07021644 00000108 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
0702174c 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0702174c 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
070218dc 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07021988 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
070219f8 00000114 W std::__cxx11::to_string(int)
07021b0c 00000190 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07021c9c 0000016c t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07021e08 00000048 t CTRPluginFramework::Reboot()
07021e50 00000054 t CTRPluginFramework::Shutdown()
07021ea4 0000013c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > CTRPluginFramework::operator<< <unsigned long, (void*)0>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07021fe0 000001fc t CTRPluginFramework::UpdateScreenshotText()
070221dc 00000460 t CTRPluginFramework::ScreenshotMenuCallback()
0702263c 00000130 T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0702276c 00000164 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
070228d0 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07022904 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)
07022948 0000065c t CTRPluginFramework::EditBacklight(CTRPluginFramework::MenuEntryTools*)
07022fa4 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
07022fc4 00000048 t _GLOBAL__sub_D__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0702300c 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
07023048 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07023058 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
07023058 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
0702309c 0000001c T CTRPluginFramework::SubMenu::operator()()
070230b8 000001f8 T CTRPluginFramework::SubMenu::Draw()
070232b0 000000e0 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
07023390 00000008 T CTRPluginFramework::SubMenu::IsOpen()
07023398 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
070233b4 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
070233ec 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070233ec 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07023470 000001ac T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0702361c 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
0702361c 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
07023620 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07023620 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07023624 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07023624 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07023628 00000018 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
07023640 00000018 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07023658 00000018 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07023670 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
0702380c 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
07023948 000000f4 T CTRPluginFramework::HexEditor::IntegerView::Draw()
07023a3c 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
07023a7c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07023ad4 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07023b14 0000014c T CTRPluginFramework::HexEditor::~HexEditor()
07023b14 0000014c T CTRPluginFramework::HexEditor::~HexEditor()
07023c60 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
07023c7c 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
07023c98 00000074 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
07023d0c 0000002c T CTRPluginFramework::HexEditor::_MoveBackward()
07023d38 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
07023d74 00000010 T CTRPluginFramework::HexEditor::Refresh()
07023d84 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
07023dc8 00000038 T CTRPluginFramework::HexEditor::_DiscardChanges()
07023e00 0000002c T CTRPluginFramework::HexEditor::_GetSelectedItem()
07023e2c 00000080 T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
07023eac 00000094 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
07023f40 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
0702400c 000000c0 T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
070240cc 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
0702417c 000001b4 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
07024330 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
07024340 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
07024350 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
07024360 00000040 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
070243a0 00000040 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_erase_at_end(CTRPluginFramework::HexEditor::Item*)
070243e0 0000006c T CTRPluginFramework::HexEditor::SetView(unsigned long)
0702444c 000000d4 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
07024520 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
07024578 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070245f8 00000200 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
070245f8 00000200 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
070247f8 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
070249c0 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
07024aa4 000000b8 T CTRPluginFramework::HexEditor::_CreateCheat()
07024b5c 00000260 T CTRPluginFramework::HexEditor::_RenderTop(void*)
07024dbc 00000104 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07024ec0 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
07025044 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
070250d4 00000270 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
07025344 000001e0 T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
07025524 000002b0 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
070257d4 00000060 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
07025834 00000184 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_default_append(unsigned int)
070259b8 000001c8 T CTRPluginFramework::HexEditor::_Update()
07025b80 0000028c T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07025e0c 00000020 T CTRPluginFramework::MenuEntryTools::Disable()
07025e2c 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07025e2c 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07025e4c 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07025e6c 00000058 T CTRPluginFramework::MenuEntryTools::Enable()
07025ec4 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
07025ec4 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
07025f48 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07025f48 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07025fa8 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07025fa8 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026008 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0702600c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07026064 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
070260a4 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
070260d8 00000344 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0702641c 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
0702641c 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
07026604 000000d4 T CTRPluginFramework::GuideReader::_LoadBMP()
070266d8 000003d8 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
07026ab0 0000015c T CTRPluginFramework::GuideReader::Draw()
07026c0c 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07026c80 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07026cd8 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
07026d00 00000038 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.0]
07026d38 00000040 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.0]
07026d78 00000014 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.0]
07026d8c 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
07026d8c 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
07026e08 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
07026e10 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(unsigned long)
07026e18 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
07026e20 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
07026e28 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
07026e30 00000008 T CTRPluginFramework::KeyboardImpl::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&))
07026e38 0000005c T CTRPluginFramework::KeyboardImpl::Clear()
07026e94 000001cc T CTRPluginFramework::KeyboardImpl::_RenderTop()
07027060 000004e0 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
07027540 000001c4 T CTRPluginFramework::KeyboardImpl::_UpdateScroll(float, bool)
07027704 00000068 T CTRPluginFramework::UnitsToNextChar(char const*, int)
0702776c 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
070277fc 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0702787c 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
07027900 0000015c T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
07027a5c 0000016c T CTRPluginFramework::KeyboardImpl::_Update(float)
07027bc8 00000060 T CTRPluginFramework::KeyboardImpl::_CheckInput()
07027c28 00000074 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
07027c9c 000000a8 T CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)
07027d44 0000051c T CTRPluginFramework::KeyboardImpl::_HandleManualKeyPress(CTRPluginFramework::Key)
07028260 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
07028268 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
07028268 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
07028290 00000060 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
070282f0 000000ec W void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
070283dc 0000002c W std::vector<float, std::allocator<float> >::push_back(float const&)
07028408 000000e8 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString* const&)
070284f0 0000002c W std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::push_back(CTRPluginFramework::TouchKeyString* const&)
0702851c 000002c0 T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
070287dc 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
07028840 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
070288a0 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
070288f4 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [3]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07028948 00000058 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)(), (declval<int>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
070289a0 000000f4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07028a94 00000054 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07028ae8 00000714 T CTRPluginFramework::KeyboardImpl::_CheckKeys()
070291fc 0000007c T CTRPluginFramework::KeyboardImpl::operator()(int&)
07029278 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
070292ac 000001d8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070292ac 000001d8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07029484 000001c8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07029484 000001c8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702964c 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
07029678 00000118 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.0]
07029790 000000d8 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
07029868 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07029938 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07029a08 000008bc T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
0702a2c4 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
0702a3d0 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
0702a4dc 000001a8 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
0702a684 00000048 T CTRPluginFramework::KeyboardImpl::_Decimal()
0702a6cc 00000054 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
0702a720 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
0702b174 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
0702b6f0 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0702bc6c 00000040 T CTRPluginFramework::KeyboardImpl::_Qwerty()
0702bcac 0000004c T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
0702bcf8 0000049c T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
0702c194 00000368 T CTRPluginFramework::KeyboardImpl::Run()
0702c4fc 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0702c4fc 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0702c534 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
0702c560 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
0702c574 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
0702c598 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702c5f0 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
0702c630 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0702c670 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0702c6c4 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
0702c6e8 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
0702c710 00000030 W CTRPluginFramework::ARCode::~ARCode()
0702c710 00000030 W CTRPluginFramework::ARCode::~ARCode()
0702c740 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
0702c774 00000014 t __tcf_1
0702c788 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0702c808 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
0702c928 000000e4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
0702ca0c 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702ca68 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
0702cbe0 0000011c t CTRPluginFramework::ProcessPathString(unsigned char*)
0702ccfc 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0702ccfc 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0702cf50 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
0702d11c 00000178 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
0702d294 00000120 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0702d3b4 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
0702d3f0 0000014c T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
0702d53c 0000003c W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long const, unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
0702d578 00000104 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
0702d67c 0000026c T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
0702d8e8 000000cc T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
0702d9b4 000001bc T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
0702db70 000001a0 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
0702dd10 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702dd68 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0702dda8 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
0702dec0 00000058 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
0702df18 00000010 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
0702df28 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
0702df5c 0000002c W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
0702df88 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
0702dff8 000000ec W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
0702e0e4 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
0702e120 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0702e1a0 00000060 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
0702e200 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
0702e36c 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0702e36c 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0702e7dc 00000264 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
0702ea40 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0702ea80 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
0702eb28 000002bc T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0702ede4 0000016c t CTRPluginFramework::ClearSearchFolder()
0702ef50 000000e8 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
0702f038 000005f0 T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)
0702f628 0000003c W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region const, CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
0702f664 000002f0 T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
0702f954 000003ac T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0702fd00 00000218 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
0702ff18 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
0702ff44 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
0702ff80 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0702ffbc 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
0702fff8 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
07030034 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
07030070 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0703009c 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
070300d8 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
07030114 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
07030150 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0703018c 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
070301b8 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
070301f4 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
07030220 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
0703024c 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
07030278 0000003c T CTRPluginFramework::Icon::DrawGameController25(int, int, bool)
070302b4 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
070302e0 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
0703031c 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
07030348 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
0703037c 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
070303b8 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
070303e4 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
07030420 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
0703044c 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
07030478 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
070304a4 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
070304d0 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
070304fc 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
07030528 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
07030554 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
07030580 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
070305bc 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
070305e8 0000001c T CTRPluginFramework::Icon::DrawCustomIcon(CTRPluginFramework::CustomIcon const&, int, int)
07030604 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Icon17DefaultCustomIconE
07030638 00000024 t fontGetSystemFont
0703065c 00000010 T CTRPluginFramework::Glyph::Width() const
0703066c 000004e4 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
07030b50 0000034c T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
07030e9c 000000c4 T CTRPluginFramework::Font::Initialize()
07030f60 0000001c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
07030f7c 0000018c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<unsigned long const, unsigned long>, false>*, unsigned int)
07031108 000000c8 W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
070311d0 0000012c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
070312fc 0000008c T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
07031388 00000020 T CTRPluginFramework::Font::GetGlyph(char)
070313a8 00000048 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
070313f0 00000078 t _GLOBAL__sub_D__ZN18CTRPluginFramework15g_fontAllocatedE
07031468 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07031468 00000014 T CTRPluginFramework::UIContainer::UIContainer()
0703147c 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
0703147c 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
070314a4 00000024 T CTRPluginFramework::UIContainer::Draw()
070314c8 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
070314fc 000000e8 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
070315e4 00000034 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07031618 00000008 W CTRPluginFramework::Drawable::operator()()
07031620 000000e4 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07031704 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703175c 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
0703175c 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
070317e8 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
070317e8 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
070318a0 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
070318a0 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
0703192c 0000004c T CTRPluginFramework::TouchKey::Clear()
07031978 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07031978 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07031998 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
070319b8 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
070319c0 00000008 T CTRPluginFramework::TouchKey::IsEnabled()
070319c8 00000070 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07031a38 00000070 T CTRPluginFramework::TouchKey::Draw()
07031aa8 00000008 T CTRPluginFramework::TouchKey::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
07031ab0 000000e8 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
07031b98 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031b98 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031c6c 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07031c6c 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07031d3c 00000168 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07031ea4 00000094 T CTRPluginFramework::ComboBox::Draw()
07031f38 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
07031f38 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
07031f8c 00000020 W CTRPluginFramework::ComboBox::~ComboBox()
07031fac 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07031fac 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07031ff8 0000003c T CTRPluginFramework::ComboBox::Clear()
07032034 00000080 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070320b4 000000a8 T CTRPluginFramework::ComboBox::operator()()
0703215c 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070321ac 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
070321ac 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
070321b0 00000014 T CTRPluginFramework::FloatingButton::Draw()
070321c4 00000014 T CTRPluginFramework::FloatingButton::operator()()
070321d8 00000018 T CTRPluginFramework::FloatingButton::~FloatingButton()
070321f0 00000198 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
07032388 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07032388 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070323c8 00000054 t CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask::{lambda(void*)#1}::_FUN(void*)
0703241c 0000000c T CTRPluginFramework::OSDImpl::Lock()
07032428 0000001c T CTRPluginFramework::OSDImpl::TryLock()
07032444 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07032450 000000e8 T CTRPluginFramework::OSDImpl::PauseFrame()
07032538 00000194 T CTRPluginFramework::OSDImpl::WaitFramePaused()
070326cc 000000ac T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07032778 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl4LockEv
070327a8 000000dc t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl4LockEv
07032884 000000c4 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
07032948 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07032948 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07032ac0 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07032ac0 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07032c18 000002c0 T CTRPluginFramework::MessageBoxImpl::_Draw()
07032ed8 000001f4 T CTRPluginFramework::MessageBoxImpl::operator()()
070330cc 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070330d0 000002fc T CTRPluginFramework::TextBox::Draw()
070333cc 0000002c t std::_Vector_base<unsigned char*, std::allocator<unsigned char*> >::_M_allocate(unsigned int) [clone .isra.0]
070333f8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07033450 00000094 T CTRPluginFramework::TextBox::TextBox()
07033450 00000094 T CTRPluginFramework::TextBox::TextBox()
070334e4 0000000c T CTRPluginFramework::TextBox::Open() const
070334f0 0000000c T CTRPluginFramework::TextBox::Close() const
070334fc 00000008 T CTRPluginFramework::TextBox::IsOpen() const
07033508 00000228 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
07033730 0000000c T CTRPluginFramework::TextBox::DrawConst() const
0703373c 00000094 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
070337d0 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
07033884 00000050 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
070338d4 000000a0 W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
07033974 0000023c T CTRPluginFramework::TextBox::_GetTextInfos()
07033bb0 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07033bb0 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07033d34 00000160 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07033e94 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
07033e94 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
07033f08 00000008 T CTRPluginFramework::TouchKeyString::ForcePressed(bool)
07033f10 00000034 T CTRPluginFramework::TouchKeyString::CanUse()
07033f44 000000cc T CTRPluginFramework::TouchKeyString::Draw()
07034010 000000e8 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
070340f8 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07034110 00000014 T CTRPluginFramework::TouchKeyString::GetPosition(unsigned short&, float&)
07034124 00000018 T CTRPluginFramework::TouchKeyString::SetPosition(unsigned short, float)
0703413c 00000048 T CTRPluginFramework::TouchKeyString::operator()()
07034184 00000008 T CTRPluginFramework::TouchKeyString::GetAcceptSoundEvent()
0703418c 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
0703418c 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07034238 0000007c T CTRPluginFramework::NumericTextBox::Draw()
070342b4 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
070342b4 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
070342d4 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
070342f4 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0703438c 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.0]
070343c4 00000060 T CTRPluginFramework::NumericTextBox::_UpdateVal()
07034424 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
07034434 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
0703443c 0000000c T CTRPluginFramework::NumericTextBox::Clear()
07034448 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07034448 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
070344b0 000000f4 T CTRPluginFramework::NumericTextBox::operator()()
070345a4 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
070345b4 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07034628 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07034680 00000108 t RegBlock& std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&) [clone .isra.0]
07034788 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
070347c0 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
07034868 00000140 T ARM_Disasm::Decode01(unsigned long)
070349a8 00000028 T ARM_Disasm::Decode10(unsigned long)
070349d0 00000078 T ARM_Disasm::Decode11(unsigned long)
07034a48 00000054 T ARM_Disasm::DecodeMUL(unsigned long)
07034a9c 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
07034aec 00000110 T ARM_Disasm::DecodeALU(unsigned long)
07034bfc 000000c4 T ARM_Disasm::Decode00(unsigned long)
07034cc0 00000030 T ARM_Disasm::Decode(unsigned long)
07034cf0 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
07034d70 0000035c T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
070350cc 00000078 T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
07035144 00000070 T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
070351b4 00000080 T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
07035234 00000448 T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
0703567c 00000220 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
0703589c 000000a4 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
07035940 000000c0 T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
07035a00 000000c0 T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
07035ac0 000000b0 T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
07035b70 00000090 T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
07035c00 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
07035d78 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
07035e8c 00000064 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
07035ef0 00000094 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
07035f84 00000354 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
070362d8 000002fc T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
070365d4 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
07036648 0000014c t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07036794 00000360 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
07036af4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07036b4c 00000090 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07036bdc 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
07036c18 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07036c18 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07036c3c 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
07036c64 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07036c64 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07036c98 000000b0 T CTRPluginFramework::ARCodeContext::Clear()
07036d48 00000110 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07036d48 00000110 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07036e58 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07036e58 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07036f7c 000000f0 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703706c 00000084 T CTRPluginFramework::ARCode::Update()
070370f0 0000003c T CTRPluginFramework::ARCodeContext::Update()
0703712c 000000c0 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
070371ec 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework11g_codeTypesE
0703720c 00000020 t __tcf_1
0703722c 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.0]
07037244 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
0703726c 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
07037284 00000050 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
070372d4 00000050 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07037324 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703736c 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0703736c 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
070373bc 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
070373dc 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07037488 00000040 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::size() const
070374c8 00000128 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
070375f0 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
07037658 000000f0 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07037748 00000104 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
0703784c 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
0703785c 00000118 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07037974 00000038 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*) [clone .isra.0]
070379ac 000004b8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07037e64 00000154 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
07037fb8 0000074c T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
07038704 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
07038754 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07038754 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
070387cc 00000020 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
070387ec 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070387ec 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038838 00000068 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
070388a0 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07038938 00000130 T CTRPluginFramework::MenuEntryActionReplay::Update()
07038a68 000000b0 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07038b18 00000140 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
07038c58 00000040 t std::_Vector_base<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_allocate(unsigned int) [clone .isra.0]
07038c98 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07038cf0 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
07038d18 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07038d18 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07038d18 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07038d18 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07038d64 00000044 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038da8 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
07038da8 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
07038dc8 00000034 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
07038dfc 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07038e5c 00000040 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07038e9c 00000144 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07038e9c 00000144 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07038fe0 000002b8 T CTRPluginFramework::ARCodeEditor::_RenderTop()
07039298 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
070392f4 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
07039344 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
070393ac 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07039458 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07039458 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
070394d0 0000003c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703950c 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07039540 00001454 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
0703a994 0000008c T CTRPluginFramework::ARCodeEditor::_Update()
0703aa20 00000060 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
0703aa80 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0703aaa4 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0703aacc 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
0703ab08 00000030 t __tcf_1
0703ab38 0000012c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
0703ac64 0000003c t CTRPluginFramework::ARCodeEditor::CodeLine& std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&) [clone .isra.0]
0703aca0 000002f4 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
0703af94 00000688 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
0703b61c 000001a8 t CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&) [clone .isra.0]
0703b7c4 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0703b880 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
0703bcf4 000003cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0703c0c0 000001f4 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
0703c2b4 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
0703c2b4 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
0703c2e0 00000018 T CTRPluginFramework::LineReader::~LineReader()
0703c2e0 00000018 T CTRPluginFramework::LineReader::~LineReader()
0703c2f8 000000fc T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703c3f4 00000024 t __tcf_0
0703c418 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0703c418 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0703c440 0000004c T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
0703c48c 00000048 T CTRPluginFramework::LineWriter::Flush()
0703c4d4 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0703c4d4 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0703c4f0 00000064 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703c554 00000018 T CTRPluginFramework::LineWriter::Close()
0703c56c 00000040 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
0703c5ac 00000020 T CTRPluginFramework::Time::AsSeconds() const
0703c5cc 00000028 T CTRPluginFramework::Time::AsMicroseconds() const
0703c5f4 00000030 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*) [clone .isra.0]
0703c624 00000090 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_get_insert_unique_pos(unsigned long const&) [clone .isra.0]
0703c6b4 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
0703c6b4 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
0703c6e8 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
0703c6e8 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
0703c708 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
0703c75c 00000048 T CTRPluginFramework::ThreadEx::Join(bool)
0703c7a4 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
0703c7ac 00000170 W std::_Rb_tree_iterator<std::pair<unsigned long const, ThreadVars*> > std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_emplace_hint_unique<std::pair<unsigned long, ThreadVars*> >(std::_Rb_tree_const_iterator<std::pair<unsigned long const, ThreadVars*> >, std::pair<unsigned long, ThreadVars*>&&)
0703c91c 00000218 T __ctrpf_getThreadVars
0703cb34 00000038 t _GLOBAL__sub_I___ctrpf_getThreadVars
0703cb6c 00000038 t _GLOBAL__sub_D___ctrpf_getThreadVars
0703cba4 0000000c T CTRPluginFramework::Sound::Sound()
0703cba4 0000000c T CTRPluginFramework::Sound::Sound()
0703cbb0 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
0703cbb0 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
0703cbc4 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0703cbc4 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0703cbf8 00000090 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound const&)
0703cc88 00000070 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound&&)
0703ccf8 00000058 T CTRPluginFramework::Sound::~Sound()
0703ccf8 00000058 T CTRPluginFramework::Sound::~Sound()
0703cd50 00000018 T CTRPluginFramework::Sound::GetLoadStatus()
0703cd68 00000040 T CTRPluginFramework::Sound::Play(int, int)
0703cda8 00000008 T CTRPluginFramework::Sound::Play(int)
0703cdb0 00000008 T CTRPluginFramework::Sound::Play()
0703cdb8 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0703cdb8 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0703cdc8 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0703cdc8 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0703cde4 00000384 t cwav_initialize
0703d168 000000f4 t cwav_stopImpl.part.0
0703d25c 00000004 T cwavUseEnvironment
0703d260 00000034 T cwavSetVAToPACallback
0703d294 00000050 T cwavLoad
0703d2e4 000004d8 T cwavPlay
0703d7bc 00000064 T cwavStop
0703d820 00000170 T cwavFree
0703d990 00000004 T cwav_defaultVAToPA
0703d994 00000004 T cwavEnvUseEnvironment
0703d998 00000008 T cwavEnvGetEnvironment
0703d9a0 00000004 T cwavEnvInitialize
0703d9a4 00000004 T cwavEnvFinalize
0703d9a8 00000014 T cwavEnvCompatibleEncoding
0703d9bc 00000008 T cwavEnvGetChannelAmount
0703d9c4 00000018 T cwavEnvIsChannelAvailable
0703d9dc 000000f4 T cwavEnvPlay
0703dad0 00000004 T cwavEnvChannelIsPlaying
0703dad4 00000004 T cwavEnvStop
0703dad8 0000002c W MemBlock::Create(unsigned char*, unsigned long)
0703db04 00000034 W MemPool::DelBlock(MemBlock*)
0703db38 0000005c T MemPool::CoalesceRight(MemBlock*)
0703db94 000000fc T MemPool::Allocate(MemChunk&, unsigned long, int)
0703dc90 00000100 T MemPool::Deallocate(MemChunk const&)
0703dd90 00000020 T MemPool::GetFreeSpace()
0703ddb0 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0703ddb0 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0703de74 00000008 T CTRPluginFramework::SoundImpl::GetLoadStatus()
0703de7c 00000018 T CTRPluginFramework::SoundImpl::Play(int, int)
0703de94 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
0703de94 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
0703debc 000000d0 T CTRPluginFramework::Search32::FirstSearchUnknown()
0703df8c 000000c4 T CTRPluginFramework::Search32::FirstSearchSpecified()
0703e050 00000064 W CTRPluginFramework::Search::~Search()
0703e050 00000064 W CTRPluginFramework::Search::~Search()
0703e0b4 00000044 T CTRPluginFramework::Search32::~Search32()
0703e0b4 00000044 T CTRPluginFramework::Search32::~Search32()
0703e0f8 00000020 T CTRPluginFramework::Search32::~Search32()
0703e118 00000024 W CTRPluginFramework::Search::~Search()
0703e13c 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0703e13c 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0703e340 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703e340 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703e360 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0703e360 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0703e3f4 0000010c W std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0703e500 000001b4 T CTRPluginFramework::Search32::SecondSearchSpecified()
0703e6b4 00000100 W std::vector<unsigned long, IAllocator<unsigned long> >::_M_default_append(unsigned int)
0703e7b4 0000019c T CTRPluginFramework::Search32::SecondSearchUnknown()
0703e950 00000138 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0703ea88 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
0703ead4 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
0703ec18 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
0703ed5c 0000003c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >& std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0703ed98 00000068 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
0703ee00 000000d8 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0703eed8 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
0703ef14 00000080 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
0703ef94 000000f8 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0703f08c 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
0703f0d8 0000032c T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
0703f404 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703f694 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703f93c 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703fbcc 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
0703fc00 0000031c T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703ff1c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703ff74 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0703ffb4 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
07040068 00000058 T CTRPluginFramework::SearchMenu::_JumpInEditor()
070400c0 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07040140 00000094 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector<char const* const*, void>(char const* const*, char const* const*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
07040140 00000094 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector<char const* const*, void>(char const* const*, char const* const*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
070401d4 000000a0 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
070401d4 000000a0 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07040274 00000198 T CTRPluginFramework::SearchMenu::Update()
0704040c 0000018c T CTRPluginFramework::SearchMenu::_Edit()
07040598 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
07040614 0000015c T CTRPluginFramework::SearchMenu::_ExportAll()
07040770 0000014c T CTRPluginFramework::SearchMenu::_Export()
070408bc 000005b8 T CTRPluginFramework::SearchMenu::Draw()
07040e74 0000011c T CTRPluginFramework::SearchMenu::_ShowGame()
07040f90 00000518 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
070414a8 000000e4 T CTRPluginFramework::Converter::Converter()
070414a8 000000e4 T CTRPluginFramework::Converter::Converter()
0704158c 00000010 T CTRPluginFramework::Converter::Instance()
0704159c 00000110 T CTRPluginFramework::Converter::_Draw()
070416ac 00000228 T CTRPluginFramework::Converter::operator()(unsigned long)
070418d4 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
070418f8 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0704191c 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
07041940 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
07041968 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
07041990 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
070419b8 00000100 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
07041ab8 00001a50 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07043508 000000b0 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
070435b8 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
070435d8 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043a5c 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043ee4 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07044360 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07044988 00000920 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070452a8 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07045bb8 000008e8 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070464a0 00000c54 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070470f4 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07047998 00000928 T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070482c0 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07048be4 00000de4 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070499c8 00000c88 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704a650 0000075c T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704adac 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704b1b4 000006d4 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704b888 00000084 W envGetHandle
0704b90c 00000050 W envDestroyHandles
0704b95c 00000094 T fontEnsureMapped
0704b9f0 00000100 T fontGlyphIndexFromCodePoint
0704baf0 00000070 T fontGetCharWidthInfo
0704bb60 00000074 T osConvertVirtToPhys
0704bbd4 00000054 T osGetTimeRef
0704bc28 000000ec T osGetTime
0704bd14 0000012c T srvInit
0704be40 00000058 T srvExit
0704be98 000000a0 T srvGetServiceHandleDirect
0704bf38 00000038 T srvGetServiceHandle
0704bf70 00000038 T srvPublishToSubscriber
0704bfa8 0000000c T __sync_init
0704bfb4 00000018 T __sync_fini
0704bfcc 0000002c T syncArbitrateAddressWithTimeout
0704bff8 0000001c T LightLock_Init
0704c014 000000ac T LightLock_Lock
0704c0c0 00000040 T LightLock_Unlock
0704c100 00000024 T RecursiveLock_Init
0704c124 00000030 T RecursiveLock_Lock
0704c154 00000078 T RecursiveLock_TryLock
0704c1cc 00000054 T RecursiveLock_Unlock
0704c220 00000040 T LightEvent_Init
0704c260 000000a4 T LightEvent_Clear
0704c304 00000048 T LightEvent_Pulse
0704c34c 000000c8 T LightEvent_Signal
0704c414 000000a0 T LightEvent_Wait
0704c4b4 00000014 T LightSemaphore_Init
0704c4c8 00000094 T LightSemaphore_Acquire
0704c55c 00000064 T LightSemaphore_Release
0704c5c0 000000b4 t mappableFindAddressWithin
0704c674 00000028 T mappableInit
0704c69c 00000080 T mappableAlloc
0704c71c 00000004 T mappableFree
0704c720 0000008c T acInit
0704c7ac 0000003c T acExit
0704c7e8 000000a4 T amInit
0704c88c 0000003c T amExit
0704c8c8 00000158 T aptSendCommand
0704ca20 00000030 T aptHook
0704ca50 00000030 T aptUnhook
0704ca80 00000028 T APT_PrepareToCloseApplication
0704caa8 00000048 T APT_CloseApplication
0704caf0 0000007c T APT_CheckNew3DS
0704cb6c 00000048 T APT_GetSharedFont
0704cbb4 000000a4 T cfguInit
0704cc58 0000003c T cfguExit
0704cc94 00000054 T CFGU_GetSystemLanguage
0704cce8 000000cc T fsInit
0704cdb4 0000003c T fsExit
0704cdf0 000000cc T FSUSER_OpenFile
0704cebc 000000bc T FSUSER_DeleteFile
0704cf78 000000f8 T FSUSER_RenameFile
0704d070 000000bc T FSUSER_DeleteDirectoryRecursively
0704d12c 000000d4 T FSUSER_CreateFile
0704d200 000000c4 T FSUSER_CreateDirectory
0704d2c4 000000f8 T FSUSER_RenameDirectory
0704d3bc 000000b4 T FSUSER_OpenDirectory
0704d470 00000094 T FSUSER_OpenArchive
0704d504 00000058 T FSFILE_Read
0704d55c 00000060 T FSFILE_Write
0704d5bc 00000038 T FSFILE_GetSize
0704d5f4 00000028 T FSFILE_SetSize
0704d61c 0000003c T FSFILE_Close
0704d658 00000024 T FSFILE_Flush
0704d67c 00000028 T FSFILE_SetPriority
0704d6a4 00000050 T FSDIR_Read
0704d6f4 0000003c T FSDIR_Close
0704d730 000000f0 T gspExit
0704d820 00000024 W hidShouldUseIrrst
0704d844 0000018c T hidInit
0704d9d0 000000e8 T hidExit
0704dab8 000002a4 T hidScanInput
0704dd5c 00000010 T hidKeysHeld
0704dd6c 00000010 T hidKeysDown
0704dd7c 00000010 T hidKeysUp
0704dd8c 00000018 T hidTouchRead
0704dda4 00000160 T irrstInit
0704df04 000000cc T irrstExit
0704dfd0 000000b4 T irrstScanInput
0704e084 00000024 T irrstKeysHeld
0704e0a8 0000000c T srvPmGetSessionHandle
0704e0b4 000000b4 T sslcInit
0704e168 00000048 T sslcExit
0704e1b0 00000048 T sslcGenerateRandomData
0704e1f8 00000074 T rbtree_find
0704e26c 00000010 T rbtree_init
0704e27c 000001b0 t do_insert
0704e42c 00000008 T rbtree_insert
0704e434 00000318 T rbtree_remove
0704e74c 00000090 T rbtree_rotate
0704e7dc 00000064 T decode_utf16
0704e840 0000013c T decode_utf8
0704e97c 00000054 T encode_utf16
0704e9d0 000000e0 T encode_utf8
0704eab0 000000c0 T utf8_to_utf16
0704eb70 T svcQueryMemory
0704eba0 T svcExitProcess
0704eba8 T svcCreateThread
0704ebc8 T svcExitThread
0704ebd0 T svcSleepThread
0704ebd8 T svcSetThreadPriority
0704ebe0 T svcReleaseMutex
0704ebe8 T svcCreateEvent
0704ebfc T svcSignalEvent
0704ec04 T svcClearEvent
0704ec0c T svcMapMemoryBlock
0704ec14 T svcUnmapMemoryBlock
0704ec1c T svcCreateAddressArbiter
0704ec30 T svcArbitrateAddress
0704ec48 T svcArbitrateAddressNoTimeout
0704ec50 T svcCloseHandle
0704ec58 T svcWaitSynchronization
0704ec60 T svcWaitSynchronizationN
0704ec88 T svcDuplicateHandle
0704ec9c T svcGetSystemTick
0704eca4 T svcGetSystemInfo
0704ecbc T svcGetProcessInfo
0704ecd4 T svcConnectToPort
0704ece8 T svcSendSyncRequest
0704ecf0 T svcOpenProcess
0704ed04 T svcGetProcessId
0704ed18 T svcGetThreadId
0704ed2c T svcBreak
0704ed34 T svcInvalidateProcessDataCache
0704ed3c T svcFlushProcessDataCache
0704ed44 T svcKernelSetState
0704ed4c T svcQueryProcessMemory
0704ed70 0000005c T rbtree_node_next
0704edcc 00000004 T operator delete(void*)
0704edd0 00000004 T operator delete(void*, std::nothrow_t const&)
0704edd4 00000004 T operator delete(void*, unsigned int)
0704edd8 00000004 T operator delete[](void*)
0704eddc 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
0704ede8 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
0704edf4 0000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
0704ee00 0000000c W __gnu_cxx::__concurrence_wait_error::what() const
0704ee10 00000038 t (anonymous namespace)::init()
0704ee48 00000024 t (anonymous namespace)::init_static_cond()
0704ee6c 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704ee6c 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704ee8c 0000002c W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704eeb8 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704eeb8 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704eed8 0000002c W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704ef04 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704ef04 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704ef24 0000002c W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704ef50 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704ef50 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704ef70 0000002c W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704ef9c 0000002c W __gnu_cxx::__throw_concurrence_lock_error()
0704efc8 0000002c W __gnu_cxx::__throw_concurrence_unlock_error()
0704eff4 0000002c W __gnu_cxx::__throw_concurrence_broadcast_error()
0704f020 000001a4 T __cxa_guard_acquire
0704f1c4 000000b0 T __cxa_guard_release
0704f274 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704f274 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704f294 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704f2c0 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0704f2c0 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0704f2d0 00000014 T std::get_new_handler()
0704f2e4 0000005c T operator new(unsigned int)
0704f340 0000001c T operator new(unsigned int, std::nothrow_t const&)
0704f35c 00000004 T operator new[](unsigned int)
0704f360 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704f360 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704f380 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704f3ac 00000138 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0704f4e4 00000088 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0704f56c 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0704f5b0 00000004 T std::type_info::~type_info()
0704f5b0 00000004 T std::type_info::~type_info()
0704f5b4 00000008 T std::type_info::__is_pointer_p() const
0704f5b4 00000008 T std::type_info::__is_function_p() const
0704f5bc 00000014 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
0704f5d0 00000014 T std::__detail::_List_node_base::_M_unhook()
0704f5e4 00000058 T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
0704f63c 00000070 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
0704f6ac 00000284 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
0704f930 0000002c T std::__throw_bad_alloc()
0704f95c 0000002c T std::__throw_bad_array_new_length()
0704f988 00000040 T std::__throw_logic_error(char const*)
0704f9c8 00000040 T std::__throw_invalid_argument(char const*)
0704fa08 00000040 T std::__throw_length_error(char const*)
0704fa48 00000040 T std::__throw_out_of_range(char const*)
0704fa88 00000010 T std::__throw_out_of_range_fmt(char const*, ...)
0704fa98 000000e4 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
0704fb80 000000e0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
0704fc60 00000044 T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
0704fca4 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
0704fcf8 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
0704fd1c 00000140 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_cold(char*, unsigned int, char const*, unsigned int, unsigned int)
0704fe5c 0000000c T std::bad_alloc::what() const
0704fe68 00000020 T std::bad_alloc::~bad_alloc()
0704fe68 00000020 T std::bad_alloc::~bad_alloc()
0704fe88 0000002c T std::bad_alloc::~bad_alloc()
0704feb4 0000000c T std::bad_array_new_length::what() const
0704fec0 00000020 T std::bad_array_new_length::~bad_array_new_length()
0704fec0 00000020 T std::bad_array_new_length::~bad_array_new_length()
0704fee0 0000002c T std::bad_array_new_length::~bad_array_new_length()
0704ff0c 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0704ff68 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0704ff7c 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0704ff7c 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0704ff9c 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0704ffc8 00000064 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0705002c 0000007c T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
070500a8 000000d4 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0705017c 00000118 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
07050294 000000d4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
07050368 00000044 T __cxa_allocate_exception
070503ac 0000002c T __cxa_free_exception
070503d8 000001b4 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0705058c T __cxa_end_cleanup
0705059c 00000134 T __cxa_type_match
070506d0 000000b4 T __cxa_begin_cleanup
07050784 000000b4 T __gnu_end_cleanup
07050838 000000cc T __cxa_begin_catch
07050904 000000e0 T __cxa_end_catch
070509e4 00000004 T std::exception::~exception()
070509e4 00000004 T std::exception::~exception()
070509e8 00000004 T std::bad_exception::~bad_exception()
070509e8 00000004 T std::bad_exception::~bad_exception()
070509ec 0000000c T transaction clone for std::exception::what() const
070509ec 0000000c T std::exception::what() const
070509f8 0000000c T transaction clone for std::bad_exception::what() const
070509f8 0000000c T std::bad_exception::what() const
07050a04 00000018 T std::bad_exception::~bad_exception()
07050a1c 0000003c t eh_globals_dtor(void*)
07050a58 00000038 T __cxa_get_globals_fast
07050a90 00000074 T __cxa_get_globals
07050b04 00000040 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
07050b44 00000034 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
07050b78 0000016c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
07050ce4 00000058 t base_of_encoded_value(unsigned char, _Unwind_Context*)
07050d3c 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
07050e14 000006a0 T __gxx_personality_v0
070514b4 00000014 T __cxxabiv1::__terminate(void (*)())
070514c8 00000018 T std::terminate()
070514e0 0000000c T __cxxabiv1::__unexpected(void (*)())
070514ec 00000018 T std::unexpected()
07051504 00000014 T std::get_terminate()
07051518 00000014 T std::get_unexpected()
0705152c 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0705158c 00000054 T __cxa_init_primary_exception
070515e0 00000054 T __cxa_throw
07051634 000000b0 T __cxa_rethrow
070516e4 00000008 T std::logic_error::what() const
070516e4 00000008 T std::runtime_error::what() const
070516ec 00000098 T std::logic_error::~logic_error()
070516ec 00000098 T std::logic_error::~logic_error()
07051784 00000098 T std::length_error::~length_error()
07051784 00000098 T std::length_error::~length_error()
0705181c 00000098 T std::invalid_argument::~invalid_argument()
0705181c 00000098 T std::invalid_argument::~invalid_argument()
070518b4 00000098 T std::out_of_range::~out_of_range()
070518b4 00000098 T std::out_of_range::~out_of_range()
0705194c 000000a0 T std::logic_error::~logic_error()
070519ec 000000a0 T std::length_error::~length_error()
07051a8c 000000a0 T std::invalid_argument::~invalid_argument()
07051b2c 000000a0 T std::out_of_range::~out_of_range()
07051bcc 000000d4 T std::logic_error::logic_error(char const*)
07051bcc 000000d4 T std::logic_error::logic_error(char const*)
07051ca0 00000020 T std::invalid_argument::invalid_argument(char const*)
07051ca0 00000020 T std::invalid_argument::invalid_argument(char const*)
07051cc0 00000020 T std::length_error::length_error(char const*)
07051cc0 00000020 T std::length_error::length_error(char const*)
07051ce0 00000020 T std::out_of_range::out_of_range(char const*)
07051ce0 00000020 T std::out_of_range::out_of_range(char const*)
07051d00 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
07051d84 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
07051d88 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
07051df8 0000002c T __cxa_call_terminate
07051e24 00000150 T __cxa_call_unexpected
07051f78 0000027c T log2
070521f4 000000c0 T ceilf
070522b8 0000013c T ceil
070523f4 000000c0 T floorf
070524b8 00000144 T floor
070525fc 00000068 T roundf
07052664 00000024 t with_errno
07052688 00000050 T __math_divzero
070526d8 0000001c T __math_invalid
070526f4 00000044 T __popcountsi2
07052738 00000030 T __aeabi_f2lz
07052738 00000030 T __fixsfdi
07052768 00000040 T __aeabi_f2ulz
07052768 00000040 T __fixunssfdi
070527a8 00000120 T __udivmoddi4
070528c8 00000018 t selfrel_offset31
070528e0 00000090 t search_EIT_table
07052970 00000040 t __gnu_unwind_get_pr_addr
070529b0 0000010c t get_eit_entry
07052abc 00000088 t restore_non_core_regs
07052b44 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
07052b58 00000004 t _Unwind_DebugHook
07052b5c 00000064 t unwind_phase2
07052bc0 00000140 t unwind_phase2_forced
07052d00 000000a4 T __gnu_Unwind_RaiseException
07052da4 00000028 T __gnu_Unwind_ForcedUnwind
07052dcc 00000074 T __gnu_Unwind_Resume
07052e40 00000020 T __gnu_Unwind_Resume_or_Rethrow
07052e60 00000004 T _Unwind_Complete
07052e64 00000018 T _Unwind_DeleteException
07052e7c 0000006c T _Unwind_VRS_Get
07052ee8 0000002c t _Unwind_GetGR
07052f14 0000006c T _Unwind_VRS_Set
07052f80 0000002c t _Unwind_SetGR
07052fac 000000c0 T __gnu_Unwind_Backtrace
0705306c 00000410 t __gnu_unwind_pr_common
0705347c 00000008 T __aeabi_unwind_cpp_pr0
07053484 00000008 W __aeabi_unwind_cpp_pr1
0705348c 00000008 W __aeabi_unwind_cpp_pr2
07053494 00000424 T _Unwind_VRS_Pop
070538b8 00000064 t next_unwind_byte
0705391c 0000002c t _Unwind_GetGR.constprop.0
07053948 00000004 t unwind_UCB_from_context
0705394c 00000464 T __gnu_unwind_execute
07053db0 00000048 T __gnu_unwind_frame
07053df8 00000010 T _Unwind_GetRegionStart
07053e08 0000001c T _Unwind_GetLanguageSpecificData
07053e24 00000008 T _Unwind_GetDataRelBase
07053e2c 00000008 T _Unwind_GetTextRelBase
07053e34 0000025c t _strtoull_l.isra.0
07054090 00000030 T _strtoull_r
070540c0 00000020 T memalign
070540e0 0000014c T _memalign_r
0705422c 00000014 T atexit
07054240 000000cc T snprintf
0705430c 00000018 T isxdigit
07054324 00000064 T sprintf
07054388 00000020 T calloc
070543a8 000000c0 T _calloc_r
07054468 000000f8 T _malloc_trim_r
07054560 000002e8 T _free_r
07054848 00000018 T isspace
07054860 00000130 T strchr
07054990 000000d8 T memcmp
07054a68 00000148 T _fclose_r
07054bb0 0000064c t get_arg
07055200 00003324 T _svfprintf_r
07058524 00000018 T malloc
0705853c 00000018 T free
07058554 0000079c T _malloc_r
07058cf0 00000024 T getenv
07058d14 00000150 T memmove
07058e64 000000a4 T _vsnprintf_r
07058f08 00000038 T vsnprintf
07058f40 000000c8 T _findenv_r
07059008 00000018 T _getenv_r
07059020 000000f4 T memset
07059114 0000000c T __malloc_lock
07059120 0000000c T __malloc_unlock
0705912c 00000090 T strlen
070591bc 0000022c T __sflush_r
070593e8 00000094 T _fflush_r
0705947c 000000e4 T strncmp
07059560 00000070 T _fwalk_sglue
070595d0 00000020 T localtime
070595f0 000000c4 T strncpy
070596b4 0000001c t stdio_exit_handler
070596d0 0000005c t cleanup_stdio
0705972c 00000154 t global_stdio_init.part.0
07059880 0000005c T __sinit
070598dc 0000000c T __sfp_lock_acquire
070598e8 0000000c T __sfp_lock_release
070598f4 00000360 T localtime_r
07059c54 00000010 T ctime
07059c64 00000048 T strnlen
07059cac 00000064 t sulp
07059d10 000013a4 T _strtod_l
0705b0b8 00000108 T strtof
0705b1c0 00000010 T _tzset_unlocked
0705b1d0 00000664 T _tzset_unlocked_r
0705b834 00000020 T realloc
0705b854 0000012c t iso_year_adjust
0705b980 0000126c t __strftime.isra.0
0705cbec 00000030 T strftime
0705cc1c 0000000c T __gettzinfo
0705cc28 000001d8 t _strtoul_l.isra.0
0705ce00 00000030 T _strtoul_r
0705ce30 00000034 T strtoul
0705ce64 00000024 T __locale_mb_cur_max
0705ce88 0000004c T time
0705ced4 00000024 T _localeconv_r
0705cef8 00000254 T __tzcalc_limits
0705d14c 000000f0 T strcpy
0705d23c 000000e0 T memchr
0705d31c 000000f0 T __utf8_wctomb
0705d40c 0000011c T memcpy
0705d528 00000084 T __libc_init_array
0705d5ac 0000000c T __errno
0705d5b8 00000010 T nan
0705d5c8 0000000c T nanf
0705d5d8 00000088 T frexp
0705d660 0000012c T __smakebuf_r
0705d78c 000000a0 T _wcrtomb_r
0705d82c 00000028 T _wcsrtombs_r
0705d854 000000b0 T __register_exitproc
0705d904 0000000c T abs
0705d910 00000044 T __sread
0705d954 00000008 T __seofread
0705d95c 00000068 T __swrite
0705d9c4 00000044 T __sseek
0705da08 00000008 T __sclose
0705da10 00000074 T siscanf
0705da84 0000000c T __env_lock
0705da90 0000000c T __env_unlock
0705da9c 000000cc T sniprintf
0705db68 0000064c t get_arg
0705e1b4 0000018c T __ssprint_r
0705e340 00002230 T _svfiprintf_r
07060570 00000050 t get_arg
070605c0 000000e0 T _sungetc_r
070606a0 0000006c T __ssrefill_r
0706070c 000000c4 T _sfread_r
070607d0 000022cc T __ssvfiscanf_r
07062a9c 0000000c T labs
07062aa8 000000f0 t rshift
07062b98 0000089c T __gethex
07063434 000001b4 t quorem
070635e8 00001218 T _dtoa_r
07064800 0000004c T __match
0706484c 0000029c T __hexnan
07064ae8 00000088 T _Balloc
07064b70 0000001c T _Bfree
07064b8c 000000f4 T __multadd
07064c80 00000110 T __s2b
07064d90 00000060 T __hi0bits
07064df0 0000009c T __lo0bits
07064e8c 000000a4 T __i2b
07064f30 00000204 T __multiply
07065134 00000128 T __pow5mult
0706525c 00000140 T __lshift
0706539c 00000058 T __mcmp
070653f4 000001fc T __mdiff
070655f0 00000068 T __ulp
07065658 000000d0 T __b2d
07065728 00000124 T __d2b
0706584c 00000078 T __ratio
070658c4 00000088 T __copybits
0706594c 0000005c T __any_on
070659a8 00000020 T asctime
070659c8 00000268 T gmtime_r
07065c30 00000080 T asctime_r
07065cb0 000004a0 T _realloc_r
07066150 0000000c T __tz_lock
0706615c 0000000c T __tz_unlock
07066168 000002f8 T __utf8_mbtowc
07066460 000001b0 t _strtol_l.part.0
07066610 00000060 T _strtol_r
07066670 00000234 t _strtoll_l.isra.0
070668a4 00000030 T _strtoll_r
070668d4 00000008 T iswspace
070668dc 000000b4 T _mbrtowc_r
07066990 00000038 T iswspace_l
070669c8 00000188 T _wcsnrtombs_l
07066b50 00000064 T _wcsnrtombs_r
07066bb4 000000f0 T __sccl
07066ca4 00000064 T siprintf
07066d08 000000a8 T __submore
07066db0 00000090 T category
07066e40 0000005c T __assert_func
07066e9c 0000003c T fiprintf
07066ed8 0000064c t get_arg
07067524 00000030 T __sprint_r
07067554 00002304 T _vfiprintf_r
07069858 000000b8 t __sbprintf
07069910 00000138 T __swsetup_r
07069a48 000004b4 T __sfvwrite_r
07069efc 00000078 T _fstat_r
07069f74 0000002c T __getreent
07069fa0 00000030 T _gettimeofday_r
07069fd0 0000003c T __get_handle
0706a00c 000000f4 T _close_r
0706a100 00000008 t null_write
0706a108 00000008 T _isatty_r
0706a110 00000084 T _lseek_r
0706a194 00000080 T _read_r
0706a214 00000078 W _sbrk_r
0706a28c 0000001c T __libc_lock_acquire
0706a2a8 0000001c T __libc_lock_release
0706a2c4 0000001c T __libc_lock_acquire_recursive
0706a2e0 0000001c T __libc_lock_release_recursive
0706a2fc 00000080 T _write_r
0706a37c 00000038 T __aeabi_d2lz
0706a37c 00000038 T __fixdfdi
0706a3b8 00000040 T __aeabi_d2ulz
0706a3b8 00000040 T __fixunsdfdi
0706a3f8 T _fini
0706cd14 00000038 R vtable for CTRPluginFramework::Search
0706cd4c 00000014 V vtable for CTRPluginFramework::MenuItem
0706cd60 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
0706cd7c 00000a00 r font
0706d77c 0000001c R vtable for CTRPluginFramework::Button
0706d798 00000008 r CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
0706d7a0 00000058 r CTRPluginFramework::g_OSDPattern
0706d7f8 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0706d810 0000001c V vtable for std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>
0706d82c 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
0706d834 00000004 R CTRPluginFramework::Color::SkyBlue
0706d838 00000004 R CTRPluginFramework::Color::Orange
0706d83c 00000004 R CTRPluginFramework::Color::LimeGreen
0706d840 00000004 R CTRPluginFramework::Color::ForestGreen
0706d844 00000004 R CTRPluginFramework::Color::Gainsboro
0706d848 00000004 R CTRPluginFramework::Color::DimGrey
0706d84c 00000004 R CTRPluginFramework::Color::DeepSkyBlue
0706d850 00000004 R CTRPluginFramework::Color::DarkGrey
0706d854 00000004 R CTRPluginFramework::Color::Brown
0706d858 00000004 R CTRPluginFramework::Color::BlackGrey
0706d85c 00000004 R CTRPluginFramework::Color::Green
0706d860 00000004 R CTRPluginFramework::Color::Gray
0706d864 00000004 R CTRPluginFramework::Color::Silver
0706d868 00000004 R CTRPluginFramework::Color::Magenta
0706d86c 00000004 R CTRPluginFramework::Color::Cyan
0706d870 00000004 R CTRPluginFramework::Color::Yellow
0706d874 00000004 R CTRPluginFramework::Color::Blue
0706d878 00000004 R CTRPluginFramework::Color::Lime
0706d87c 00000004 R CTRPluginFramework::Color::Red
0706d880 00000004 R CTRPluginFramework::Color::White
0706d884 00000004 R CTRPluginFramework::Color::Black
0706deb4 00000014 r CTRPluginFramework::defaultSoundFiles
0706dec8 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
0706dedc 00000038 r CTRPluginFramework::stable
0706df14 00000038 r CTRPluginFramework::ktable
0706df4c 00000023 r CTRPluginFramework::g_copyrightText
0706df6f 0000001e r CTRPluginFramework::g_ctrpfText
0706df90 00000020 R vtable for CTRPluginFramework::HexEditor::ByteView
0706dfb0 00000020 R vtable for CTRPluginFramework::HexEditor::IntegerView
0706dfd0 00000020 R vtable for CTRPluginFramework::HexEditor::AsmView
0706dff0 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0706dff8 0000001c R vtable for CTRPluginFramework::MenuEntryTools
0706e018 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
0706e020 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
0706e028 0000001c R vtable for CTRPluginFramework::TouchKey
0706e044 0000001c R vtable for CTRPluginFramework::ComboBox
0706e060 0000001c R vtable for CTRPluginFramework::FloatingButton
0706e07c 0000001c R vtable for CTRPluginFramework::TextBox
0706e098 0000001c R vtable for CTRPluginFramework::NumericTextBox
0706e0b4 00000040 r RegNames
0706e0f4 00000010 r shift_names
0706e104 00000040 r cond_names
0706e144 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
0706e160 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
0706e168 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
0706e170 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
0706e178 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
0706e18c 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
0706e198 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
0706e218 00000008 R CTRPluginFramework::Time::Zero
0706e220 00000384 r Settings15_array
0706e5a4 00000384 r UnCheckedCheckbox_array
0706e928 00000384 r Unsplash15_array
0706ecac 000009c4 r Plus25_array
0706f670 000009c4 r GameControllerFilled25_array
07070034 00000384 r About15_array
070703b8 000009c4 r Cut25_array
07070d7c 00000640 r CloseWindow20_array
070713bc 00000384 r Controller15_array
07071740 00000384 r ClearSymbolFilled15_array
07071ac4 000009c4 r ClipboardFilled25_array
07072488 00000384 r EnterKeyFilled15_array
0707280c 000009c4 r CutFilled25_array
070731d0 00000e10 r DefaultKeyboardCustomIcon_array
07073fe0 00000384 r Search15_array
07074364 00000384 r CapsLockOn15_array
070746e8 000009c4 r TrashFilled25_array
070750ac 00000384 r RAM15_array
07075430 00000384 r More15_array
070757b4 000009c4 r InfoFilled25_array
07076178 00000640 r CloseWindowFilled20_array
070767b8 00000384 r HandCursor15_array
07076b3c 000009c4 r AddFavoriteFilled25_array
07077500 00000384 r EnterKey15_array
07077884 000009c4 r Duplicate25_array
07078248 00000384 r File15_array
070785cc 000009c4 r AddFavorite25_array
07078f90 000009c4 r Edit25_array
07079954 000009c4 r DuplicateFilled25_array
0707a318 000009c4 r Save25_array
0707acdc 000009c4 r Clipboard25_array
0707b6a0 000009c4 r Info25_array
0707c064 000009c4 r EditFilled25_array
0707ca28 000009c4 r KeyboardFilled25_array
0707d3ec 000009c4 r PlusFilled25_array
0707ddb0 00000384 r ClearSymbol15_array
0707e134 00000384 r Shutdown15_array
0707e4b8 00000384 r Maintenance15_array
0707e83c 00000384 r CheckedCheckbox_array
0707ebc0 00000384 r Grid15_array
0707ef44 000009c4 r Keyboard25_array
0707f908 00000384 r CapsLockOnFilled15_array
0707fc8c 00000384 r UserManualFilled15_array
07080010 000009c4 r Trash25_array
070809d4 00000384 r GameController15_array
07080d58 00000384 r Star15_array
070810dc 000009c4 r GameController25_array
07081aa0 00001900 r Rocket40_array
070833a0 00000384 r FolderFilled_array
07083724 00000384 r Restart15_array
07083aa8 00000038 R vtable for CTRPluginFramework::Search32
07083ae0 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
07083b08 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
07083b14 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
07083b40 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
07083b4c 0000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
07083b78 0000000c V typeinfo for __gnu_cxx::__concurrence_broadcast_error
07083b84 00000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
07083bac 0000000c V typeinfo for __gnu_cxx::__concurrence_wait_error
07083bb8 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
07083bcc 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
07083be0 00000014 V vtable for __gnu_cxx::__concurrence_broadcast_error
07083bf4 00000014 V vtable for __gnu_cxx::__concurrence_wait_error
07083c08 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
07083c2c 0000000c R typeinfo for __gnu_cxx::recursive_init_error
07083c38 00000014 R vtable for __gnu_cxx::recursive_init_error
07083c4c 00000001 R std::nothrow
07083c50 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
07083c78 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
07083c84 0000002c R vtable for __cxxabiv1::__si_class_type_info
07083cb0 0000000d R typeinfo name for std::type_info
07083cc0 00000008 R typeinfo for std::type_info
07083cc8 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
07083cd8 00000404 R std::__detail::__prime_list
070840dc 00000018 V typeinfo name for std::_Sp_make_shared_tag
070840f4 0000000d R typeinfo name for std::bad_alloc
07084104 0000000c R typeinfo for std::bad_alloc
07084110 00000014 R vtable for std::bad_alloc
07084124 00000019 R typeinfo name for std::bad_array_new_length
07084140 0000000c R typeinfo for std::bad_array_new_length
0708414c 00000014 R vtable for std::bad_array_new_length
07084160 00000022 R typeinfo name for __cxxabiv1::__class_type_info
07084184 0000000c R typeinfo for __cxxabiv1::__class_type_info
07084190 0000002c R vtable for __cxxabiv1::__class_type_info
070841bc 0000000d R typeinfo name for std::exception
070841cc 00000008 R typeinfo for std::exception
070841d4 00000012 R typeinfo name for std::bad_exception
070841e8 0000000c R typeinfo for std::bad_exception
070841f4 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
07084214 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0708421c 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
07084240 00000008 R typeinfo for __cxxabiv1::__foreign_exception
07084248 00000014 R vtable for std::bad_exception
0708425c 00000010 R typeinfo name for std::logic_error
0708426c 0000000c R typeinfo for std::logic_error
07084278 00000015 R typeinfo name for std::invalid_argument
07084290 0000000c R typeinfo for std::invalid_argument
0708429c 00000011 R typeinfo name for std::length_error
070842b0 0000000c R typeinfo for std::length_error
070842bc 00000011 R typeinfo name for std::out_of_range
070842d0 0000000c R typeinfo for std::out_of_range
070842dc 00000014 R vtable for std::logic_error
070842f0 00000014 R vtable for std::invalid_argument
07084304 00000014 R vtable for std::length_error
07084318 00000014 R vtable for std::out_of_range
07084330 00000890 R __log2_data
07084bc0 00000101 R _ctype_
07084cc4 00000010 r zeroes.0
07084cd4 00000010 r blanks.1
07084ce4 00000014 r fpinan.0
07084cf8 00000014 r fpi.1
07084d10 00000028 r tinytens
07084d38 00000060 R __month_lengths
07084d98 000000fc R _C_time_locale
07084e94 00000010 r zeroes.0
07084ea4 00000010 r blanks.1
07084eb4 0000006c R __action_table
07084f20 0000006c R __state_table
07084f8c 00000100 R __chclass
0708508c 00000022 r basefix.0
070850b0 00000100 R __hexdig
070851b0 0000000c r p05.0
070851c0 00000028 R __mprec_bigtens
070851e8 000000c8 R __mprec_tens
070852b0 00000024 r mon_name.0
070852d4 00000015 r day_name.1
070852ec 00003528 r categories
07088814 00000010 r zeroes.0
07088824 00000010 r blanks.1
07088834 00000080 R dotab_stdnull
070888b4 R __tdata_align
07088a14 R __exidx_start
07088c4c R __exidx_end
07088c4c 00000004 D cwavCurrentVAPAConvCallback
07088c50 00000018 D CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
07088c68 00000018 D CTRPluginFramework::Screenshot::Path[abi:cxx11]
07088c80 00000004 D CTRPluginFramework::Screenshot::Screens
07088c84 00000004 D CTRPluginFramework::Screenshot::Hotkeys
07088c88 00000001 D CTRPluginFramework::SystemImpl::Language
07088c8c 00000004 D CTRPluginFramework::RendererPriv::g_customColor
07088c90 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
07088c94 00000018 D CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
07088cac 00000018 D CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
07088cc4 00000018 D CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
07088cdc 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
07088ce0 00000004 D CTRPluginFramework::FwkSettings::Header
07088ce4 00000001 D CTRPluginFramework::g_keepRunning
07088ce8 00000004 D g_charPerSheet
07088cec 00000001 d CTRPluginFrameworkImpl::Services::GSP::RunInterruptReceiver
07088cf0 00000018 D CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
07088d08 00000001 D CTRPluginFramework::EventManager::_refresh
07088d0c 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
07088d10 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
07088d14 000001f4 D opcode_names
07088f08 00000018 d CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
07088f20 00000004 D Settings15
07088f24 00000004 D UnCheckedCheckbox
07088f28 00000004 D Unsplash15
07088f2c 00000004 D Plus25
07088f30 00000004 D GameControllerFilled25
07088f34 00000004 D About15
07088f38 00000004 D Cut25
07088f3c 00000004 D CloseWindow20
07088f40 00000004 D Controller15
07088f44 00000004 D ClearSymbolFilled15
07088f48 00000004 D ClipboardFilled25
07088f4c 00000004 D EnterKeyFilled15
07088f50 00000004 D CutFilled25
07088f54 00000004 D DefaultKeyboardCustomIcon
07088f58 00000004 D Search15
07088f5c 00000004 D CapsLockOn15
07088f60 00000004 D TrashFilled25
07088f64 00000004 D RAM15
07088f68 00000004 D More15
07088f6c 00000004 D InfoFilled25
07088f70 00000004 D CloseWindowFilled20
07088f74 00000004 D HandCursor15
07088f78 00000004 D AddFavoriteFilled25
07088f7c 00000004 D EnterKey15
07088f80 00000004 D Duplicate25
07088f84 00000004 D File15
07088f88 00000004 D AddFavorite25
07088f8c 00000004 D Edit25
07088f90 00000004 D DuplicateFilled25
07088f94 00000004 D Save25
07088f98 00000004 D Clipboard25
07088f9c 00000004 D Info25
07088fa0 00000004 D EditFilled25
07088fa4 00000004 D KeyboardFilled25
07088fa8 00000004 D PlusFilled25
07088fac 00000004 D ClearSymbol15
07088fb0 00000004 D Shutdown15
07088fb4 00000004 D Maintenance15
07088fb8 00000004 D CheckedCheckbox
07088fbc 00000004 D Grid15
07088fc0 00000004 D Keyboard25
07088fc4 00000004 D CapsLockOnFilled15
07088fc8 00000004 D UserManualFilled15
07088fcc 00000004 D Trash25
07088fd0 00000004 D GameController15
07088fd4 00000004 D Star15
07088fd8 00000004 D GameController25
07088fdc 00000004 D Rocket40
07088fe0 00000004 D FolderFilled
07088fe4 00000004 D Restart15
07088fe8 00000004 d kCount
07088fec 00000004 d kInterval
07088ff0 00000004 d kDelay
07088ff4 00000004 D __cxxabiv1::__unexpected_handler
07088ff8 00000004 D __cxxabiv1::__terminate_handler
07088ffc 00000004 D __malloc_sbrk_base
07089000 00000004 D __malloc_trim_threshold
07089008 00000408 D __malloc_av_
07089410 0000000c D __sglue
0708941c 00000008 D _tzname
07089428 00000058 d tzinfo
07089480 0000016c D __global_locale
070895ec 00000004 D _impure_ptr
070895f0 00000120 D _impure_data
07089710 00000004 D environ
07089714 00001000 d handles
0708a714 0000000c d __stderr_handle
0708a720 0000000c d __stdout_handle
0708a72c 0000000c d __stdin_handle
0708a738 0000008c D devoptab_list
0708a7d8 d _GLOBAL_OFFSET_TABLE_
0708a7e4 D __tdata_lma
0708a7f0 d __frame_dummy_init_array_entry
0708a7f0 D __init_array_start
0708a7f0 B __preinit_array_end
0708a7f0 B __preinit_array_start
0708a7f0 D __tdata_lma_end
0708a85c d __do_global_dtors_aux_fini_array_entry
0708a85c D __init_array_end
0708a8bc D __bss_start__
0708a8bc 00000001 b CTRPluginFramework::message(CTRPluginFramework::MenuEntry*)::chatMode
0708a8c0 00000018 B CTRPluginFramework::msg[abi:cxx11]
0708a8d8 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0708a8e4 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
0708a8e8 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
0708a8ec 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0708a8f0 00000004 b ncsndMutex
0708a8f4 00000004 b ncsndCmdCurOff
0708a8f8 00000004 b ncsndCmdStartOff
0708a8fc 00000004 B ncsndSharedMem
0708a900 00000004 B ncsndCSNDHandle
0708a904 00000004 b ncsndRefCount
0708a908 00000004 B ncsndChannels
0708a90c 00000010 B ncsndOffsets
0708a91c 00000004 B ncsndSharedMemSize
0708a920 00000004 b ncsndSharedMemBlock
0708a924 00000001 b ncsndCookieHooked
0708a928 0000000c b ncsndCookie
0708a934 b saved_stack
0708a93c 00000004 b cwavListCount
0708a940 00000004 b cwavList
0708a944 00000004 b cwavAddedToList
0708a948 b completed.1
0708a94c b object.0
0708a964 00000004 b CTRPluginFramework::isReady
0708a968 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
0708a970 00000008 B CTRPluginFramework::Screenshot::_readyEvent
0708a978 00000008 B CTRPluginFramework::Screenshot::_task
0708a980 00000008 B CTRPluginFramework::Screenshot::_hotkeyTimer
0708a988 00000008 B CTRPluginFramework::Screenshot::_timer
0708a990 00000004 B CTRPluginFramework::Screenshot::_display
0708a994 00000004 B CTRPluginFramework::Screenshot::_filecount
0708a998 00000004 B CTRPluginFramework::Screenshot::_mode
0708a99c 00000004 B CTRPluginFramework::Screenshot::ScreenshotCallback
0708a9a0 00000004 B CTRPluginFramework::Screenshot::ImgBuffer
0708a9a8 00000008 B CTRPluginFramework::Screenshot::Timer
0708a9b0 00000001 B CTRPluginFramework::Screenshot::IsEnabled
0708a9b4 00000008 b CTRPluginFramework::g_sleepEvent
0708a9bc 00000004 B CTRPluginFramework::SystemImpl::AptStatus
0708a9c0 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
0708a9c4 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
0708a9c8 00000001 B CTRPluginFramework::SystemImpl::IsCitra
0708a9c9 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
0708a9ca 00000001 B _g_isCitra
0708a9cc 00000004 B CTRPluginFramework::ScreenImpl::Bottom
0708a9d0 00000004 B CTRPluginFramework::ScreenImpl::Top
0708a9d4 000000ac b CTRPluginFramework::_botBuf
0708aa80 000000ac b CTRPluginFramework::_topBuf
0708ab2c 00000004 B CTRPluginFramework::_pool
0708ab30 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708ab38 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708ab48 00000001 b CTRPluginFramework::g_progressLoop
0708ab4c 00000004 b CTRPluginFramework::g_radioId
0708ab50 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
0708ab54 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708ab58 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708ab64 00000028 B CTRPluginFramework::Window::TopWindow
0708ab8c 00000028 B CTRPluginFramework::Window::BottomWindow
0708abb4 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
0708abb8 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
0708abc0 00000050 b CTRPluginFramework::g_fpsCounter
0708ac10 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask2
0708ac18 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask1
0708ac20 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
0708ac28 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
0708ac30 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
0708ac38 00000001 B CTRPluginFramework::OSDImpl::WritesToPrevFB
0708ac39 00000001 B CTRPluginFramework::OSDImpl::NeedToPauseFrame
0708ac3a 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
0708ac3c 00000020 B CTRPluginFramework::OSDImpl::previousFBAddr
0708ac5c 0000000c B CTRPluginFramework::OSDImpl::CallbacksTrashBin
0708ac68 0000000c B CTRPluginFramework::OSDImpl::Callbacks
0708ac74 0000000c B CTRPluginFramework::OSDImpl::Notifications
0708ac80 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
0708aca4 0000000c B CTRPluginFramework::OSDImpl::RecLock
0708acb0 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
0708acc8 00000018 B CTRPluginFramework::OSDImpl::TopScreen
0708ace0 00000004 B CTRPluginFramework::OSDImpl::OSDHook
0708ace4 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
0708ace8 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
0708acec 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
0708aced 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
0708acee 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
0708acf0 000000a8 B CTRPluginFramework::Preferences::Settings
0708ad98 00000008 B CTRPluginFramework::Preferences::Backlights
0708ada0 00000008 B CTRPluginFramework::Preferences::Flags
0708ada8 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
0708adac 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
0708adb0 000009c4 b CTRPluginFramework::g_rng
0708b774 00000001 B CTRPluginFramework::Process::ThrowOldExceptionOnCallbackException
0708b778 00000004 B CTRPluginFramework::Process::OnPauseResume
0708b77c 00000004 B CTRPluginFramework::Process::exceptionCallback
0708b780 00000004 B CTRPluginFramework::System::OnAbort
0708b784 00000004 B CTRPluginFramework::Controller::_keysReleased
0708b788 00000004 B CTRPluginFramework::Controller::_keysHeld
0708b78c 00000004 B CTRPluginFramework::Controller::_keysDown
0708b790 00000004 b CTRPluginFramework::g_runningInstance
0708b794 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708b798 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708b79c 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708b79e 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708b7a0 0000001c b CTRPluginFramework::g_dummy
0708b7bc 00000180 b CTRPluginFramework::g_keyName
0708b93c 0000001c B CTRPluginFramework::Render::_randomSets[abi:cxx11]
0708b958 00000004 b g_onLoadCroLock
0708b95c 00000004 b g_onSharedMemMapHook
0708b960 00000004 b g_onLoadCroHook
0708b964 00000008 b CTRPluginFramework::g_mainThread
0708b96c 00000004 B CTRPluginFramework::g_keepEvent
0708b970 00000004 B CTRPluginFramework::g_keepThreadHandle
0708b974 00000004 B CTRPluginFramework::g_continueGameEvent
0708b978 00000008 B CTRPluginFramework::_sdmcArchive
0708b980 00001000 b CTRPluginFramework::keepThreadStack
0708c980 00000004 b g_mainThreadVars
0708c984 00000001 b properInit
0708c985 00000001 b fakeInit
0708c988 00000004 b plgLdrRefCount
0708c98c 00000004 b plgReply
0708c990 00000004 b plgEvent
0708c994 00000004 b plgLdrArbiter
0708c998 00000004 b plgLdrHandle
0708c99c 00000004 B CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThreadPriority
0708c9a0 00000004 B CTRPluginFrameworkImpl::Services::GSP::BufferFlags
0708c9a4 00000008 b CTRPluginFrameworkImpl::Services::GSP::SharedFrameBuffers
0708c9ac 00000008 b CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThread
0708c9b4 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPRegisterInterruptReceiverHook
0708c9b8 00000008 b CTRPluginFrameworkImpl::Services::GSP::Semaphore
0708c9c0 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank1Event
0708c9c8 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank0Event
0708c9d0 00000004 b CTRPluginFrameworkImpl::Services::GSP::WakeEvent
0708c9d4 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPEvent
0708c9d8 00000004 b CTRPluginFrameworkImpl::Services::GSP::EventData
0708c9dc 00000004 b CTRPluginFrameworkImpl::Services::GSP::SharedMemoryBlock
0708c9e0 00000001 b CTRPluginFrameworkImpl::Services::GSP::CatchInterrupt
0708c9e4 0000001c B CTRPluginFramework::HookManager::_singleton
0708ca00 000000a8 B CTRPluginFramework::Scheduler::_singleton
0708caa8 00000008 b CTRPluginFramework::Heap::g_heapPool
0708cab0 0000000c b CTRPluginFramework::Heap::_mutex
0708cabc 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
0708cac0 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
0708cac4 0000000c b sAddrMap
0708cad0 0000000c B CTRPluginFramework::FSPath::FSMutex
0708cadc 00000044 b CTRPluginFramework::g_previousException
0708cb20 00000004 B CTRPluginFramework::ProcessImpl::processEventCallback
0708cb24 00000004 B CTRPluginFramework::ProcessImpl::exceptionCount
0708cb28 00000008 B CTRPluginFramework::ProcessImpl::waitForExitEvent
0708cb30 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
0708cb3c 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
0708cb48 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
0708cb58 00000004 B CTRPluginFramework::ProcessImpl::MainThreadTls
0708cb5c 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
0708cbc0 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
0708cbc4 00000004 B CTRPluginFramework::ProcessImpl::MainThread
0708cbc8 00000008 B CTRPluginFramework::ProcessImpl::TitleId
0708cbd0 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
0708cbd4 00000004 B CTRPluginFramework::ProcessImpl::Status
0708cbd8 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
0708cbdc 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
0708cbe0 00000004 B CTRPluginFramework::EventManager::_firstTouch
0708cbe4 00000001 B CTRPluginFramework::EventManager::_isTouching
0708cbe8 00000004 B CTRPluginFramework::SoundEngineImpl::fallbackSound
0708cbec 0000000c B CTRPluginFramework::SoundEngineImpl::menuSounds
0708cbf8 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
0708cbfc 0000000c B CTRPluginFramework::PluginMenuImpl::_trashBinMutex
0708cc08 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
0708cc0c 00000004 B CTRPluginFramework::MenuItem::_uidCounter
0708cc10 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
0708cc14 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0708cc18 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708cc20 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708cc28 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708cc30 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708cc38 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708cc3c 00000008 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708cc44 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708cc48 00000008 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708cc50 00000001 b CTRPluginFramework::g_manualScreenshotTrigger
0708cc54 00000004 b CTRPluginFramework::g_screenshotEntry
0708cc58 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
0708cc5c 00000004 b CTRPluginFramework::g_OpenFileLock
0708cc60 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
0708cc68 00000040 b CTRPluginFramework::g_hookExportFile
0708cca8 00000004 b CTRPluginFramework::g_HookMode
0708ccac 00000004 b CTRPluginFramework::g_FsTryOpenFileHook
0708ccb0 00000008 b CTRPluginFramework::g_textXpos
0708ccb8 00000004 b CTRPluginFramework::g_mode
0708ccbc 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
0708ccc0 00000010 b CTRPluginFramework::SubMenu::Draw()::background
0708ccd0 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708ccd4 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708cce4 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
0708cce8 00000004 B CTRPluginFramework::__g_hexEditor
0708ccec 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
0708ccf0 00000010 b CTRPluginFramework::GuideReader::Draw()::background
0708cd00 00000001 b CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)::preventRecursion
0708cd04 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
0708cd08 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708cd10 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708cd18 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708cd1c 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708cd2c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708cd30 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708cd38 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708cd3c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708cd4c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708cd50 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708cd60 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708cd64 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708cd74 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708cd78 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708cd88 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708cd8c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708cd9c 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
0708cda8 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
0708cdb4 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
0708cdc0 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708cdc4 00000008 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708cdcc 00000004 b CTRPluginFramework::__pmARinstance
0708cdd0 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0708cdd4 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0708cde4 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0708cde8 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0708cdf8 00000010 B CTRPluginFramework::Icon::DefaultCustomIcon
0708ce08 0000001c b CTRPluginFramework::(anonymous namespace)::defaultSysFont
0708ce24 00000004 b CTRPluginFramework::(anonymous namespace)::defaultGlyph
0708ce28 00000004 b CTRPluginFramework::(anonymous namespace)::glyph
0708ce2c 0000000c B CTRPluginFramework::Font::_mutex
0708ce38 00000004 B CTRPluginFramework::g_glyphAllocated
0708ce3c 00000004 B CTRPluginFramework::g_fontAllocated
0708ce40 00000008 b CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask
0708ce48 00000001 b CTRPluginFramework::(anonymous namespace)::HasGameResumed
0708ce49 00000001 b CTRPluginFramework::(anonymous namespace)::IsForced
0708ce4c 0000000c b CTRPluginFramework::(anonymous namespace)::FrameLockingMutex
0708ce58 0000000c B CTRPluginFramework::g_codeTypes
0708ce64 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708ce68 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708ce74 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708ce78 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708ce84 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
0708ce85 00000001 b CTRPluginFramework::g_newCondDataToggle
0708ce86 00000001 b CTRPluginFramework::g_condAgainstData
0708ce88 00000004 b CTRPluginFramework::__arCodeEditor
0708ce8c 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708ce90 00000018 b __threads
0708cea8 0000000c b __mutex
0708ceb4 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708ceb8 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708cec0 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708cec8 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708ced0 00000004 b CTRPluginFramework::__converter
0708ced4 00000004 b CTRPluginFramework::g_context
0708ced8 00000001 b CTRPluginFramework::ToggleFloat
0708ced9 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
0708cedc 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
0708cee0 00000004 B CTRPluginFramework::ARHandler::ActiveData
0708cee4 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
0708cee8 00000008 B CTRPluginFramework::ARHandler::Storage
0708cef0 00000010 B CTRPluginFramework::ARHandler::Data
0708cf00 00000008 B CTRPluginFramework::ARHandler::Offset
0708cf08 00000fa0 b CTRPluginFramework::arStack
0708dea8 00000004 b sharedFontAddr
0708deac 00000004 B g_sharedFont
0708deb0 00000004 b srvRefCount
0708deb4 00000004 b srvHandle
0708deb8 00000004 b arbiter
0708debc 00000004 b currentAddr
0708dec0 00000004 b maxAddr
0708dec4 00000004 b minAddr
0708dec8 00000004 b acRefCount
0708decc 00000004 b acHandle
0708ded0 00000004 b amRefCount
0708ded4 00000004 b amHandle
0708ded8 00000001 b flagValue.0
0708ded9 00000001 b flagInit.1
0708dedc 00000004 b serviceName.6
0708dee0 0000000c b aptFirstHook
0708deec 00000004 b aptLockHandle
0708def0 00000004 b cfguRefCount
0708def4 00000004 b cfguHandle
0708def8 00000080 b fsExemptArchives
0708df78 00000004 b fsuRefCount
0708df7c 00000004 b fsuHandle
0708df80 00000001 b gspRunEvents
0708df84 00000004 b gspEventThread
0708df88 00000004 b gspEvent
0708df8c 00000001 b gspGpuRight
0708df90 00000004 b gspSharedMem
0708df94 00000004 b gspSharedMemHandle
0708df98 00000004 b gspRefCount
0708df9c 00000004 b gspGpuHandle
0708dfa0 00000001 b usingIrrst
0708dfa4 00000004 b hidRefCount
0708dfa8 00000006 b gRate
0708dfb0 00000006 b aVec
0708dfb8 00000004 b cPos
0708dfbc 00000004 b tPos
0708dfc0 00000004 b kRepeat
0708dfc4 00000004 b kUp
0708dfc8 00000004 b kDown
0708dfcc 00000004 b kHeld
0708dfd0 00000004 b kOld
0708dfd4 00000004 B hidSharedMem
0708dfd8 00000014 B hidEvents
0708dfec 00000004 B hidMemHandle
0708dff0 00000004 B hidHandle
0708dff4 00000004 b irrstRefCount
0708dff8 00000004 b csPos
0708dffc 00000004 b kHeld
0708e000 00000004 B irrstSharedMem
0708e004 00000004 B irrstEvent
0708e008 00000004 B irrstMemHandle
0708e00c 00000004 B irrstHandle
0708e010 00000004 b srvPmHandle
0708e014 00000004 b __sslc_refcount
0708e018 00000004 B __sslc_servhandle
0708e01c 00000004 V __ctru_heap_size
0708e020 00000004 B __ctru_linear_heap
0708e024 00000004 B __ctru_heap
0708e028 00000004 b (anonymous namespace)::get_static_cond()::once
0708e030 00000008 b (anonymous namespace)::fake_cond
0708e038 00000004 b (anonymous namespace)::static_cond
0708e03c 00000004 b (anonymous namespace)::get_static_mutex()::once
0708e040 00000010 b (anonymous namespace)::fake_mutex
0708e050 00000004 b (anonymous namespace)::static_mutex
0708e054 00000004 b (anonymous namespace)::__new_handler
0708e058 0000001c b (anonymous namespace)::emergency_pool
0708e074 00000004 b init
0708e078 00000001 B __eh_globals_init::_S_init
0708e07c 0000000c b (anonymous namespace)::eh_globals
0708e088 00000010 V std::string::_Rep::_S_empty_rep_storage
0708e098 00000028 B __malloc_current_mallinfo
0708e0c0 00000004 B __malloc_max_total_mem
0708e0c4 00000004 B __malloc_max_sbrked_mem
0708e0c8 00000004 B __malloc_top_pad
0708e0cc 0000000c b __malloc_recursive_mutex
0708e0d8 0000000c b __sfp_recursive_mutex
0708e0e8 00000168 B __sf
0708e250 00000004 B __stdio_exit_handler
0708e254 00000004 b prev_tzenv
0708e258 0000000c b __tzname_dst
0708e264 0000000c b __tzname_std
0708e270 00000004 B _timezone
0708e274 00000004 B _daylight
0708e278 00000190 B __atexit0
0708e408 00000004 B __atexit
0708e40c 0000000c B __atexit_recursive_mutex
0708e418 00000004 b initial_env
0708e41c 0000000c b __env_recursive_mutex
0708e428 00000004 b __tz_mutex
0708e42c 00000004 b __hndl_lock
0708e430 00000004 B fake_heap_start
0708e434 00000004 B fake_heap_end
0708e438 00000004 b heap_start.0
0708e43c B __tls_start
0708e468 B __bss_end__
0708e468 A __end__
0708e468 B __tls_end
